{
  "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdm",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_plugin",
          "type": "address"
        }
      ],
      "name": "addPlugin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_plugin",
          "type": "address"
        }
      ],
      "name": "approvePlugin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approvedPlugins",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_collateralDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "decreasePosition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_collateralDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        }
      ],
      "name": "decreasePositionAndSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_collateralDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "address payable",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        }
      ],
      "name": "decreasePositionAndSwapETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_collateralDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "address payable",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "decreasePositionETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_plugin",
          "type": "address"
        }
      ],
      "name": "denyPlugin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "directPoolDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gov",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "increasePosition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "increasePositionETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_collateralDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "pluginDecreasePosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        }
      ],
      "name": "pluginIncreasePosition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "pluginTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "plugins",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_plugin",
          "type": "address"
        }
      ],
      "name": "removePlugin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        }
      ],
      "name": "setGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "swapETHToTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "swapTokensToETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdm",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x4f1319447db8d182b085e0b0e473e6b10272d4c1423fe8ec31b651051c2bdd1b",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "transactionIndex": 0,
    "gasUsed": "2292053",
    "logsBloom": "0x
    "blockHash": "0x5caa31205b4f47fb4a78cfa075cb471c7be6b35e31af07e02ea460b9bce25cbe",
    "transactionHash": "0x4f1319447db8d182b085e0b0e473e6b10272d4c1423fe8ec31b651051c2bdd1b",
    "logs": [],
    "blockNumber": 5,
    "cumulativeGasUsed": "2292053",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0"
  ],
  "numDeployments": 1,
  "solcInputHash": "1fb095c2a8736afe292bad1aa4a33281",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdm\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_plugin\",\"type\":\"address\"}],\"name\":\"addPlugin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_plugin\",\"type\":\"address\"}],\"name\":\"approvePlugin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedPlugins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"decreasePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"}],\"name\":\"decreasePositionAndSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"}],\"name\":\"decreasePositionAndSwapETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"address payable\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"decreasePositionETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_plugin\",\"type\":\"address\"}],\"name\":\"denyPlugin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"directPoolDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"increasePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"increasePositionETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"pluginDecreasePosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"}],\"name\":\"pluginIncreasePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"pluginTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"plugins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_plugin\",\"type\":\"address\"}],\"name\":\"removePlugin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"swapETHToTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"swapTokensToETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdm\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/Router.sol\":\"Router\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/core/Router.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.6.12;\\n\\nimport \\\"./settings/RouterSettings.sol\\\";\\n\\ncontract Router is RouterSettings {\\n    \\n    constructor(address _vault, address _usdm, address _weth) public {\\n        vault = _vault;\\n        usdm = _usdm;\\n        weth = _weth;\\n        gov = msg.sender;\\n    }\\n    \\n    receive() external payable {\\n        require(msg.sender == weth, Errors.ROUTER_INVALID_SENDER);\\n    }\\n\\n    function addPlugin(address _plugin) external override onlyGov {\\n        plugins[_plugin] = true;\\n    }\\n\\n    function removePlugin(address _plugin) external onlyGov {\\n        plugins[_plugin] = false;\\n    }\\n\\n    function approvePlugin(address _plugin) external {\\n        approvedPlugins[msg.sender][_plugin] = true;\\n    }\\n\\n    function denyPlugin(address _plugin) external {\\n        approvedPlugins[msg.sender][_plugin] = false;\\n    }\\n\\n    function pluginTransfer(address _token, address _account, address _receiver, uint256 _amount) external override {\\n        _validatePlugin(_account);\\n        IERC20(_token).safeTransferFrom(_account, _receiver, _amount);\\n    }\\n\\n    function pluginIncreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong) external override {\\n        _validatePlugin(_account);\\n        IVault(vault).increasePosition(_account, _collateralToken, _indexToken, _sizeDelta, _isLong);\\n    }\\n\\n    function pluginDecreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver) external override returns (uint256) {\\n        _validatePlugin(_account);\\n        return IVault(vault).decreasePosition(_account, _collateralToken, _indexToken, _collateralDelta, _sizeDelta, _isLong, _receiver);\\n    }\\n\\n    function directPoolDeposit(address _token, uint256 _amount) external {\\n        IERC20(_token).safeTransferFrom(_sender(), vault, _amount);\\n        IVault(vault).directPoolDeposit(_token);\\n    }\\n\\n    function increasePosition(address[] memory _path, address _indexToken, uint256 _amountIn, uint256 _minOut, uint256 _sizeDelta, bool _isLong, uint256 _price) external {\\n        if (_amountIn > 0) {\\n            IERC20(_path[0]).safeTransferFrom(_sender(), vault, _amountIn);\\n        }\\n        if (_path.length > 1 && _amountIn > 0) {\\n            uint256 amountOut = _swap(_path, _minOut, address(this));\\n            IERC20(_path[_path.length - 1]).safeTransfer(vault, amountOut);\\n        }\\n        _increasePosition(_path[_path.length - 1], _indexToken, _sizeDelta, _isLong, _price);\\n    }\\n\\n    function increasePositionETH(address[] memory _path, address _indexToken, uint256 _minOut, uint256 _sizeDelta, bool _isLong, uint256 _price) external payable {\\n        require(_path[0] == weth, Errors.ROUTER_INVALID_PATH);\\n        if (msg.value > 0) {\\n            _transferETHToVault();\\n        }\\n        if (_path.length > 1 && msg.value > 0) {\\n            uint256 amountOut = _swap(_path, _minOut, address(this));\\n            IERC20(_path[_path.length - 1]).safeTransfer(vault, amountOut);\\n        }\\n        _increasePosition(_path[_path.length - 1], _indexToken, _sizeDelta, _isLong, _price);\\n    }\\n\\n    function decreasePosition(address _collateralToken, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver, uint256 _price) external {\\n        _decreasePosition(_collateralToken, _indexToken, _collateralDelta, _sizeDelta, _isLong, _receiver, _price);\\n    }\\n\\n    function decreasePositionETH(address _collateralToken, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address payable _receiver, uint256 _price) external {\\n        uint256 amountOut = _decreasePosition(_collateralToken, _indexToken, _collateralDelta, _sizeDelta, _isLong, address(this), _price);\\n        _transferOutETH(amountOut, _receiver);\\n    }\\n\\n    function decreasePositionAndSwap(address[] memory _path, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver, uint256 _price, uint256 _minOut) external {\\n        uint256 amount = _decreasePosition(_path[0], _indexToken, _collateralDelta, _sizeDelta, _isLong, address(this), _price);\\n        IERC20(_path[0]).safeTransfer(vault, amount);\\n        _swap(_path, _minOut, _receiver);\\n    }\\n\\n    function decreasePositionAndSwapETH(address[] memory _path, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address payable _receiver, uint256 _price, uint256 _minOut) external {\\n        require(_path[_path.length - 1] == weth, Errors.ROUTER_INVALID_PATH);\\n        uint256 amount = _decreasePosition(_path[0], _indexToken, _collateralDelta, _sizeDelta, _isLong, address(this), _price);\\n        IERC20(_path[0]).safeTransfer(vault, amount);\\n        uint256 amountOut = _swap(_path, _minOut, address(this));\\n        _transferOutETH(amountOut, _receiver);\\n    }\\n\\n    function swap(address[] memory _path, uint256 _amountIn, uint256 _minOut, address _receiver) public override {\\n        IERC20(_path[0]).safeTransferFrom(_sender(), vault, _amountIn);\\n        uint256 amountOut = _swap(_path, _minOut, _receiver);\\n        emit Events.Swap(msg.sender, _path[0], _path[_path.length - 1], _amountIn, amountOut);\\n    }\\n\\n    function swapETHToTokens(address[] memory _path, uint256 _minOut, address _receiver) external payable {\\n        require(_path[0] == weth, Errors.ROUTER_INVALID_PATH);\\n        _transferETHToVault();\\n        uint256 amountOut = _swap(_path, _minOut, _receiver);\\n        emit Events.Swap(msg.sender, _path[0], _path[_path.length - 1], msg.value, amountOut);\\n    }\\n\\n    function swapTokensToETH(address[] memory _path, uint256 _amountIn, uint256 _minOut, address payable _receiver) external {\\n        require(_path[_path.length - 1] == weth, Errors.ROUTER_INVALID_PATH);\\n        IERC20(_path[0]).safeTransferFrom(_sender(), vault, _amountIn);\\n        uint256 amountOut = _swap(_path, _minOut, address(this));\\n        _transferOutETH(amountOut, _receiver);\\n        emit Events.Swap(msg.sender, _path[0], _path[_path.length - 1], _amountIn, amountOut);\\n    }\\n}\\n\",\"keccak256\":\"0xe08f38186b02372acfd1512c0ce8f229bf7fb9f94cbfb6014148d0cef404e786\",\"license\":\"MIT\"},\"contracts/core/interfaces/IRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\ninterface IRouter {\\n    function addPlugin(address _plugin) external;\\n    function pluginTransfer(address _token, address _account, address _receiver, uint256 _amount) external;\\n    function pluginIncreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong) external;\\n    function pluginDecreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver) external returns (uint256);\\n    function swap(address[] memory _path, uint256 _amountIn, uint256 _minOut, address _receiver) external;\\n}\\n\",\"keccak256\":\"0x68ee3ea5df5884cf76de6c0bbbf463926ffc511658a81ef6f467482300d2977a\",\"license\":\"MIT\"},\"contracts/core/interfaces/IVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\nimport \\\"./IVaultUtils.sol\\\";\\ninterface IVault {\\n    function withdrawFees(address _token, address _receiver) external returns (uint256);\\n    function directPoolDeposit(address _token) external;\\n    function buyUSDM(address _token, address _receiver) external returns (uint256);\\n    function sellUSDM(address _token, address _receiver) external returns (uint256);\\n    function swap(address _tokenIn, address _tokenOut, address _receiver) external returns (uint256);\\n    function increasePosition(address _account, address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong) external;\\n    function decreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver) external returns (uint256);\\n    function validateLiquidation(address _account, address _collateralToken, address _indexToken, bool _isLong, bool _raise) external view returns (uint256, uint256);\\n    function liquidatePosition(address _account, address _collateralToken, address _indexToken, bool _isLong, address _feeReceiver) external;\\n\\n    function tokenToUsdMin(address _token, uint256 _tokenAmount) external view returns (uint256);\\n    function priceFeed() external view returns (address);\\n    function fundingRateFactor() external view returns (uint256);\\n    function stableFundingRateFactor() external view returns (uint256);\\n    function cumulativeFundingRates(address _token) external view returns (uint256);\\n    function getNextFundingRate(address _token) external view returns (uint256);\\n    function getFeeBasisPoints(address _token, uint256 _usdmDelta, uint256 _feeBasisPoints, uint256 _taxBasisPoints, bool _increment) external view returns (uint256);\\n    function liquidationFeeUsd() external view returns (uint256);\\n    function taxBasisPoints() external view returns (uint256);\\n    function stableTaxBasisPoints() external view returns (uint256);\\n    function mintBurnFeeBasisPoints() external view returns (uint256);\\n    function swapFeeBasisPoints() external view returns (uint256);\\n    function stableSwapFeeBasisPoints() external view returns (uint256);\\n    function marginFeeBasisPoints() external view returns (uint256);\\n    function allWhitelistedTokensLength() external view returns (uint256);\\n    function allWhitelistedTokens(uint256) external view returns (address);\\n    function whitelistedTokens(address _token) external view returns (bool);\\n    function stableTokens(address _token) external view returns (bool);\\n    function shortableTokens(address _token) external view returns (bool);\\n    function feeReserves(address _token) external view returns (uint256);\\n    function globalShortSizes(address _token) external view returns (uint256);\\n    function globalShortAveragePrices(address _token) external view returns (uint256);\\n    function maxGlobalShortSizes(address _token) external view returns (uint256);\\n    function tokenDecimals(address _token) external view returns (uint256);\\n    function tokenWeights(address _token) external view returns (uint256);\\n    function guaranteedUsd(address _token) external view returns (uint256);\\n    function poolAmounts(address _token) external view returns (uint256);\\n    function bufferAmounts(address _token) external view returns (uint256);\\n    function reservedAmounts(address _token) external view returns (uint256);\\n    function usdmAmounts(address _token) external view returns (uint256);\\n    function maxUsdmAmounts(address _token) external view returns (uint256);\\n    function getRedemptionAmount(address _token, uint256 _usdmAmount) external view returns (uint256);\\n    function getMaxPrice(address _token) external view returns (uint256);\\n    function getMinPrice(address _token) external view returns (uint256);\\n    function getDelta(address _indexToken, uint256 _size, uint256 _averagePrice, bool _isLong, uint256 _lastIncreasedTime) external view returns (bool, uint256);\\n    function getPosition(address _account, address _collateralToken, address _indexToken, bool _isLong) external view returns (uint256, uint256, uint256, uint256, uint256, uint256, bool, uint256);\\n    function isInitialized() external view returns (bool);\\n    function isSwapEnabled() external view returns (bool);\\n    function isLeverageEnabled() external view returns (bool);\\n    function router() external view returns (address);\\n    function usdm() external view returns (address);\\n    function gov() external view returns (address);\\n    function whitelistedTokenCount() external view returns (uint256);\\n    function maxLeverage() external view returns (uint256);\\n    function minProfitTime() external view returns (uint256);\\n    function hasDynamicFees() external view returns (bool);\\n    function fundingInterval() external view returns (uint256);\\n    function totalTokenWeights() external view returns (uint256);\\n    function getTargetUsdmAmount(address _token) external view returns (uint256);\\n    function inManagerMode() external view returns (bool);\\n    function inPrivateLiquidationMode() external view returns (bool);\\n    function maxGasPrice() external view returns (uint256);\\n    function approvedRouters(address _account, address _router) external view returns (bool);\\n    function isLiquidator(address _account) external view returns (bool);\\n    function isManager(address _account) external view returns (bool);\\n    function minProfitBasisPoints(address _token) external view returns (uint256);\\n    function tokenBalances(address _token) external view returns (uint256);\\n    function lastFundingTimes(address _token) external view returns (uint256);\\n\\n    function setMaxLeverage(uint256 _maxLeverage) external;\\n    function setInManagerMode(bool _inManagerMode) external;\\n    function setManager(address _manager, bool _isManager) external;\\n    function setIsSwapEnabled(bool _isSwapEnabled) external;\\n    function setIsLeverageEnabled(bool _isLeverageEnabled) external;\\n    function setMaxGasPrice(uint256 _maxGasPrice) external;\\n    function setUsdmAmount(address _token, uint256 _amount) external;\\n    function setBufferAmount(address _token, uint256 _amount) external;\\n    function setMaxGlobalShortSize(address _token, uint256 _amount) external;\\n    function setInPrivateLiquidationMode(bool _inPrivateLiquidationMode) external;\\n    function setLiquidator(address _liquidator, bool _isActive) external;\\n    function setFundingRate(uint256 _fundingInterval, uint256 _fundingRateFactor, uint256 _stableFundingRateFactor) external;\\n    function setFees(uint256 _taxBasisPoints, uint256 _stableTaxBasisPoints, uint256 _mintBurnFeeBasisPoints, uint256 _swapFeeBasisPoints, uint256 _stableSwapFeeBasisPoints, uint256 _marginFeeBasisPoints, uint256 _liquidationFeeUsd, uint256 _minProfitTime, bool _hasDynamicFees) external;\\n    function setTokenConfig(address _token, uint256 _tokenDecimals, uint256 _redemptionBps, uint256 _minProfitBps, uint256 _maxUsdmAmount, bool _isStable, bool _isShortable) external;\\n    function setPriceFeed(address _priceFeed) external;\\n    function setVaultUtils(IVaultUtils _vaultUtils) external;\\n    function setError(uint256 _errorCode, string calldata _error) external;\\n}\\n\",\"keccak256\":\"0x6865fea6348cbcd8eb8c91bbf6fe38d9c7128778ed80b97e6a407f55bf0fbe81\",\"license\":\"MIT\"},\"contracts/core/interfaces/IVaultUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\ninterface IVaultUtils {\\n    function updateCumulativeFundingRate(address _collateralToken, address _indexToken) external returns (bool);\\n    function validateIncreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong) external view;\\n    function validateDecreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver) external view;\\n    function validateLiquidation(address _account, address _collateralToken, address _indexToken, bool _isLong, bool _raise) external view returns (uint256, uint256);\\n    function getEntryFundingRate(address _collateralToken, address _indexToken, bool _isLong) external view returns (uint256);\\n    function getPositionFee(address _account, address _collateralToken, address _indexToken, bool _isLong, uint256 _sizeDelta) external view returns (uint256);\\n    function getFundingFee(address _account, address _collateralToken, address _indexToken, bool _isLong, uint256 _size, uint256 _entryFundingRate) external view returns (uint256);\\n    function getBuyUsdmFeeBasisPoints(address _token, uint256 _usdmAmount) external view returns (uint256);\\n    function getSellUsdmFeeBasisPoints(address _token, uint256 _usdmAmount) external view returns (uint256);\\n    function getSwapFeeBasisPoints(address _tokenIn, address _tokenOut, uint256 _usdmAmount) external view returns (uint256);\\n    function getFeeBasisPoints(address _token, uint256 _usdmDelta, uint256 _feeBasisPoints, uint256 _taxBasisPoints, bool _increment) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x938c049c684992effbeeb9aa3b069331224e0cfdf95e97d4aaf3d8fbd99b51b8\",\"license\":\"MIT\"},\"contracts/core/settings/RouterSettings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\nimport \\\"../storage/RouterStorage.sol\\\";\\nabstract contract RouterSettings is RouterStorage {\\n    function _increasePosition(address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong, uint256 _price) internal {\\n        if (_isLong) {\\n            require(IVault(vault).getMaxPrice(_indexToken) <= _price, Errors.ROUTER_MARK_PRICE_HIGHER_THAN_LIMIT);\\n        } else {\\n            require(IVault(vault).getMinPrice(_indexToken) >= _price, Errors.ROUTER_MARK_PRICE_LOWER_THAN_LIMIT);\\n        }\\n        IVault(vault).increasePosition(_sender(), _collateralToken, _indexToken, _sizeDelta, _isLong);\\n    }\\n    function _decreasePosition(address _collateralToken, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver, uint256 _price) internal returns (uint256) {\\n        if (_isLong) {\\n            require(IVault(vault).getMinPrice(_indexToken) >= _price, Errors.ROUTER_MARK_PRICE_LOWER_THAN_LIMIT);\\n        } else {\\n            require(IVault(vault).getMaxPrice(_indexToken) <= _price, Errors.ROUTER_MARK_PRICE_HIGHER_THAN_LIMIT);\\n        }\\n        return IVault(vault).decreasePosition(_sender(), _collateralToken, _indexToken, _collateralDelta, _sizeDelta, _isLong, _receiver);\\n    }\\n    function _transferETHToVault() internal {\\n        IWETH(weth).deposit{value: msg.value}();\\n        IERC20(weth).safeTransfer(vault, msg.value);\\n    }\\n    function _transferOutETH(uint256 _amountOut, address payable _receiver) internal {\\n        IWETH(weth).withdraw(_amountOut);\\n        _receiver.sendValue(_amountOut);\\n    }\\n    function _swap(address[] memory _path, uint256 _minOut, address _receiver) internal returns (uint256) {\\n        if (_path.length == 2) {\\n            return _vaultSwap(_path[0], _path[1], _minOut, _receiver);\\n        }\\n        if (_path.length == 3) {\\n            uint256 midOut = _vaultSwap(_path[0], _path[1], 0, address(this));\\n            IERC20(_path[1]).safeTransfer(vault, midOut);\\n            return _vaultSwap(_path[1], _path[2], _minOut, _receiver);\\n        }\\n        revert(Errors.ROUTER_INVALID_PATH_LENGTH);\\n    }\\n    function _vaultSwap(address _tokenIn, address _tokenOut, uint256 _minOut, address _receiver) internal returns (uint256) {\\n        uint256 amountOut;\\n        if (_tokenOut == usdm) {\\n            amountOut = IVault(vault).buyUSDM(_tokenIn, _receiver);\\n        } else if (_tokenIn == usdm) {\\n            amountOut = IVault(vault).sellUSDM(_tokenOut, _receiver);\\n        } else {\\n            amountOut = IVault(vault).swap(_tokenIn, _tokenOut, _receiver);\\n        }\\n        require(amountOut >= _minOut, Errors.ROUTER_INSUFFICIENT_AMOUNTOUT);\\n        return amountOut;\\n    }\\n    function _sender() internal view returns (address) {\\n        return msg.sender;\\n    }\\n    function _validatePlugin(address _account) internal view {\\n        require(plugins[msg.sender], Errors.ROUTER_INVALID_PLUGIN);\\n        require(approvedPlugins[_account][msg.sender], Errors.ROUTER_PLUGIN_NOT_APPROVED);\\n    }\\n    function setGov(address _gov) external onlyGov {\\n        gov = _gov;\\n    }\\n}\\n\",\"keccak256\":\"0x639188afcc0f5dc23bf13ed24999f87850e5308586c7250a148f50795ffbfc96\",\"license\":\"MIT\"},\"contracts/core/storage/RouterStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\nimport \\\"../../libraries/math/SafeMath.sol\\\";\\nimport \\\"../../libraries/token/IERC20.sol\\\";\\nimport \\\"../../libraries/token/SafeERC20.sol\\\";\\nimport \\\"../../libraries/utils/Address.sol\\\";\\nimport \\\"../../libraries/Errors.sol\\\";\\nimport \\\"../../libraries/Events.sol\\\";\\nimport \\\"../../libraries/Errors.sol\\\";\\nimport \\\"../../tokens/interfaces/IWETH.sol\\\";\\nimport \\\"../interfaces/IVault.sol\\\";\\nimport \\\"../interfaces/IRouter.sol\\\";\\nabstract contract RouterStorage is IRouter {\\n    address public gov;\\n    address public weth;\\n    address public usdm;\\n    address public vault;\\n    mapping (address => bool) public plugins;\\n    mapping (address => mapping (address => bool)) public approvedPlugins;\\n    using SafeMath for uint256;\\n    using SafeERC20 for IERC20;\\n    using Address for address payable;\\n    modifier onlyGov() {\\n        require(msg.sender == gov, Errors.ROUTER_FORBIDDEN);\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x78044d52ef2b39ddfbb801ed6c9147ba65d586cb5f93e5e81c71863bf5108bf1\",\"license\":\"MIT\"},\"contracts/libraries/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\nlibrary Errors {\\n    /* Timelock Error Message*/\\n    string public constant Timelock_Invalid_Target = \\\"Timelock: invalid _target\\\";\\n    string public constant Timelock_Invalid_Buffer = \\\"Timelock: invalid _buffer\\\";\\n    string public constant Timelock_Buffer_Cannot_Be_Decreased = \\\"Timelock: buffer cannot be decreased\\\";\\n    string public constant Timelock_invalid_maxLeverage = \\\"Timelock: invalid _maxLeverage\\\";\\n    string public constant Timelock_invalid_fundingRateFactor = \\\"Timelock: invalid _fundingRateFactor\\\";\\n    string public constant Timelock_invalid_stableFundingRateFactor = \\\"Timelock: invalid _stableFundingRateFactor\\\";\\n    string public constant Timelock_invalid_minProfitBps = \\\"Timelock: invalid _minProfitBps\\\";\\n    string public constant Timelock_token_not_yet_whitelisted = \\\"Timelock: token not yet whitelisted\\\";\\n    string public constant TIMELOCK_INVALID_MAXGASPRICE = \\\"Invalid _maxGasPrice\\\";\\n    string public constant TIMELOCK_INVALID_LENGTHS = \\\"Timelock: invalid lengths\\\";\\n    string public constant TIMELOCK_MAXTOKENSUPPLY_EXCEEDED = \\\"Timelock: maxTokenSupply exceeded\\\";\\n    string public constant TIMELOCK_ACTION_ALREADY_SIGNALLED = \\\"Timelock: action already signalled\\\";\\n    string public constant TIMELOCK_ACTION_NOT_SIGNALLED = \\\"Timelock: action not signalled\\\";\\n    string public constant TIMELOCK_ACTION_TIME_NOT_YET_PASSED = \\\"Timelock: action time not yet passed\\\";\\n    string public constant TIMELOCK_INVALID_ACTION = \\\"Timelock: invalid _action\\\";\\n    string public constant TIMELOCK_INVALID_BUFFER = \\\"Timelock: invalid _buffer\\\";\\n\\n    /* PriceFeed Error Message*/\\n    string public constant PriceFeed_forbidden = \\\"PriceFeed: forbidden\\\";\\n\\n    /* USDM.sol*/\\n    string public constant USDM_FORBIDDEN = \\\"USDM: forbidden\\\";\\n\\n    /* BasePositionManagers.sol */\\n    string public constant BASEPOSITIONMANAGER_MARK_PRICE_LOWER_THAN_LIMIT      = \\\"BasePositionManager: mark price lower than limit\\\";\\n    string public constant BASEPOSITIONMANAGER_MARK_PRICE_HIGHER_THAN_LIMIT     = \\\"BasePositionManager: mark price higher than limit\\\";\\n    string public constant BASEPOSITIONMANAGER_INVALID_PATH_LENGTH              = \\\"BasePositionManager: invalid _path.length\\\";\\n    string public constant BASEPOSITIONMANAGER_INSUFFICIENT_AMOUNTOUT           = \\\"BasePositionManager: insufficient amountOut\\\";\\n    string public constant BASEPOSITIONMANAGER_MAX_GLOBAL_LONGS_EXCEEDED        = \\\"BasePositionManager: max global longs exceeded\\\";\\n    string public constant BASEPOSITIONMANAGER_MAX_GLOBAL_SHORTS_EXCEEDED       = \\\"BasePositionManager: max global shorts exceeded\\\";\\n    string public constant BASEPOSITIONMANAGER_INVALID_SENDER                   = \\\"BasePositionManager: invalid sender\\\";\\n\\n    /* PositionManager.sol */\\n    string public constant POSITIONMANAGER_INVALID_PATH_LENGTH                  = \\\"PositionManager: invalid _path.length\\\";\\n    string public constant POSITIONMANAGER_INVALID_PATH                         = \\\"PositionManager: invalid _path\\\";\\n    string public constant POSITIONMANAGER_LONG_DEPOSIT                         = \\\"PositionManager: long deposit\\\";\\n    string public constant POSITIONMANAGER_LONG_LEVERAGE_DECREASE               = \\\"PositionManager: long leverage decrease\\\";\\n    string public constant POSITIONMANAGER_FORBIDDEN                            = \\\"PositionManager: forbidden\\\";\\n\\n    /* Router.sol*/\\n    string public constant ROUTER_FORBIDDEN                                     = \\\"Router: forbidden\\\";\\n\\n    /* MlpManager.sol */\\n    string public constant MLPMANAGER_ACTION_NOT_ENABLED                        = \\\"MlpManager: action not enabled\\\";\\n    string public constant MLPMANAGER_INVALID_WEIGHT                            = \\\"MlpManager: invalid weight\\\";\\n    string public constant MLPMANAGER_INVALID_COOLDOWNDURATION                  = \\\"MlpManager: invalid _cooldownDuration\\\";\\n    string public constant MLPMANAGER_INVALID_AMOUNT                            = \\\"MlpManager: invalid _amount\\\";\\n    string public constant MLPMANAGER_INSUFFICIENT_USDM_OUTPUT                  = \\\"MlpManager: insufficient USDM output\\\";\\n    string public constant MLPMANAGER_INSUFFICIENT_MLP_OUTPUT                   = \\\"MlpManager: insufficient MLP output\\\";\\n    string public constant MLPMANAGER_INVALID_MLPAMOUNT                         = \\\"MlpManager: invalid _mlpAmount\\\";\\n    string public constant MLPMANAGER_COOLDOWN_DURATION_NOT_YET_PASSED          = \\\"MlpManager: cooldown duration not yet passed\\\";\\n    string public constant MLPMANAGER_INSUFFICIENT_OUTPUT                       = \\\"MlpManager: insufficient output\\\";\\n    string public constant MLPMANAGER_FORBIDDEN                                 = \\\"MlpManager: forbidden\\\";\\n\\n    /* ShortsTrack.sol*/\\n    string public constant SHORTSTRACKER_FORBIDDEN                              = \\\"ShortsTracker: forbidden\\\";\\n    string public constant SHORTSTRACKER_INVALID_HANDLER                        = \\\"ShortsTracker: invalid _handler\\\";\\n    string public constant SHORTSTRACKER_ALREADY_MIGRATED                       = \\\"ShortsTracker: already migrated\\\";\\n    string public constant SHORTSTRACKER_OVERFLOW                               = \\\"ShortsTracker: overflow\\\";\\n\\n    /* VaultUtils.sol*/\\n    string public constant VAULT_LOSSES_EXCEED_COLLATERAL                       = \\\"Vault: losses exceed collateral\\\";\\n    string public constant VAULT_FEES_EXCEED_COLLATERAL                         = \\\"Vault: fees exceed collateral\\\";\\n    string public constant VAULT_LIQUIDATION_FEES_EXCEED_COLLATERAL             = \\\"Vault: liquidation fees exceed collateral\\\";\\n    string public constant VAULT_MAXLEVERAGE_EXCEEDED                           = \\\"Vault: maxLeverage exceeded\\\";\\n\\n    /* VaultPriceFeed.sol*/\\n    string public constant VAULTPRICEFEED_FORBIDDEN                             = \\\"VaultPriceFeed: forbidden\\\";\\n    string public constant VAULTPRICEFEED_ADJUSTMENT_FREQUENCY_EXCEEDED         = \\\"VaultPriceFeed: adjustment frequency exceeded\\\";\\n    string public constant VAULTPRICEFEED_INVALID_ADJUSTMENTBPS                 = \\\"Vaultpricefeed: invalid _adjustmentBps\\\";\\n    string public constant VAULTPRICEFEED_INVALID_SPREADBASISPOINTS             = \\\"VaultPriceFeed: invalid _spreadBasisPoints\\\";\\n    string public constant VAULTPRICEFEED_INVALID_PRICESAMPLESPACE              = \\\"VaultPriceFeed: invalid _priceSampleSpace\\\";\\n    string internal constant VAULTPRICEFEED_INVALID_PRICE_FEED                  = \\\"VaultPriceFeed: invalid price feed\\\";\\n    string internal constant VAULTPRICEFEED_INVALID_PRICE                       = \\\"VaultPriceFeed: invalid price\\\";\\n    string internal constant CHAINLINK_FEEDS_ARE_NOT_BEING_UPDATED              = \\\"Chainlink feeds are not being updated\\\";\\n    string internal constant VAULTPRICEFEED_COULD_NOT_FETCH_PRICE               = \\\"VaultPriceFeed: could not fetch price\\\";\\n\\n    /* VaultInternal.sol*/\\n    string internal constant VAULT_POOLAMOUNT_EXCEEDED                          = \\\"Vault: poolAmount exceeded\\\";\\n    string internal constant VAULT_INSUFFICIENT_RESERVE                         = \\\"Vault: insufficient reserve\\\";\\n    string internal constant VAULT_MAX_SHORTS_EXCEEDED                          = \\\"Vault: max shorts exceeded\\\";\\n    string internal constant VAULT_POOLAMOUNT_BUFFER                            = \\\"Vault: poolAmount < buffer\\\";\\n    string internal constant VAULT_INVALID_ERRORCONTROLLER                      = \\\"Vault: invalid errorController\\\";\\n\\n    /* Router.sol */\\n    string internal constant ROUTER_INVALID_SENDER                              = \\\"Router: invalid sender\\\";\\n    string internal constant ROUTER_INVALID_PATH                                = \\\"Router: invalid _path\\\";\\n    string internal constant ROUTER_MARK_PRICE_HIGHER_THAN_LIMIT                = \\\"Router: mark price higher than limit\\\";\\n    string internal constant ROUTER_MARK_PRICE_LOWER_THAN_LIMIT                 = \\\"Router: mark price lower than limit\\\";\\n    string internal constant ROUTER_INVALID_PATH_LENGTH                         = \\\"Router: invalid _path.length\\\";\\n    string internal constant ROUTER_INSUFFICIENT_AMOUNTOUT                      = \\\"Router: insufficient amountOut\\\";\\n    string internal constant ROUTER_INVALID_PLUGIN                              = \\\"Router: invalid plugin\\\";\\n    string internal constant ROUTER_PLUGIN_NOT_APPROVED                         = \\\"Router: plugin not approved\\\";\\n\\n    /* OrderBook.sol*/\\n    string internal constant ORDERBOOK_FORBIDDEN                                = \\\"OrderBook: forbidden\\\";\\n    string internal constant ORDERBOOK_ALREADY_INITIALIZED                      = \\\"OrderBook: already initialized\\\";\\n    string internal constant ORDERBOOK_INVALID_SENDER                           = \\\"OrderBook: invalid sender\\\";\\n    string internal constant ORDERBOOK_INVALID_PATH_LENGTH                      = \\\"OrderBook: invalid _path.length\\\";\\n    string internal constant ORDERBOOK_INVALID_PATH                             = \\\"OrderBook: invalid _path\\\";\\n    string internal constant ORDERBOOK_INVALID_AMOUNTIN                         = \\\"OrderBook: invalid _amountIn\\\";\\n    string internal constant ORDERBOOK_INSUFFICIENT_EXECUTION_FEE               = \\\"OrderBook: insufficient execution fee\\\";\\n    string internal constant ORDERBOOK_ONLY_WETH_COULD_BE_WRAPPED               = \\\"OrderBook: only weth could be wrapped\\\";\\n    string internal constant ORDERBOOK_INCORRECT_VALUE_TRANSFERRED              = \\\"OrderBook: incorrect value transferred\\\";\\n    string internal constant ORDERBOOK_INCORRECT_EXECUTION_FEE_TRANSFERRED      = \\\"OrderBook: incorrect execution fee transferred\\\";\\n    string internal constant ORDERBOOK_NON_EXISTENT_ORDER                       = \\\"OrderBook: non-existent order\\\";\\n    string internal constant ORDERBOOK_INVALID_PRICE_FOR_EXECUTION              = \\\"OrderBook: invalid price for execution\\\";\\n    string internal constant ORDERBOOK_INSUFFICIENT_COLLATERAL                  = \\\"OrderBook: insufficient collateral\\\";\\n    string internal constant ORDERBOOK_INSUFFICIENT_AMOUNTOUT                   = \\\"OrderBook: insufficient amountOut\\\";\\n\\n    /* RewardRouterV2.sol */\\n    string internal constant REWARDROUTER_INVALID_AMOUNT                        = \\\"RewardRouter: invalid _amount\\\";\\n    string internal constant REWARDROUTER_INVALID_MSG_VALUE                     = \\\"RewardRouter: invalid msg.value\\\";\\n    string internal constant REWARDROUTER_ALREADY_INITIALIZED                   = \\\"RewardRouter: already initialized\\\";\\n    string internal constant REWARDROUTER_INVALID_MLPAMOUNT                     = \\\"RewardRouter: invalid _mlpAmount\\\";\\n    string internal constant REWARDROUTER_SENDER_HAS_VESTED_TOKENS              = \\\"RewardRouter: sender has vested tokens\\\";\\n    string internal constant REWARDROUTER_TRANSFER_NOT_SIGNALLED                = \\\"RewardRouter: transfer not signalled\\\";\\n    string internal constant REWARDROUTER_STAKEDMOLDTRACKER_AVERAGESTAKEDAMOUNTS_GREATER_0                      = \\\"RewardRouter: stakedMoldTracker.averageStakedAmounts > 0\\\";\\n    string internal constant REWARDROUTER_STAKEDMOLDTRACKER_CUMULATIVEREWARDS_GREATER_0                         = \\\"RewardRouter: stakedMoldTracker.cumulativeRewards > 0\\\";\\n    string internal constant REWARDROUTER_BONUSMOLDTRACKER_AVERAGESTAKEDAMOUNTS_GREATER_0                       = \\\"RewardRouter: bonusMoldTracker.averageStakedAmounts > 0\\\";\\n    string internal constant REWARDROUTER_BONUSMOLDTRACKER_CUMULATIVEREWARDS_GREATER_0                          = \\\"RewardRouter: bonusMoldTracker.cumulativeRewards > 0\\\";\\n    string internal constant REWARDROUTER_FEEMOLDTRACKER_AVERAGESTAKEDAMOUNTS_GREATER_0                         = \\\"RewardRouter: feeMoldTracker.averageStakedAmounts > 0\\\";\\n    string internal constant REWARDROUTER_FEEMOLDTRACKER_CUMULATIVEREWARDS_GREATER_0                            = \\\"RewardRouter: feeMoldTracker.cumulativeRewards > 0\\\";\\n    string internal constant REWARDROUTER_MOLDVESTER_TRANSFERREDAVERAGESTAKEDAMOUNTS_GREATER_0                  = \\\"RewardRouter: MoldVester.transferredAverageStakedAmounts > 0\\\";\\n    string internal constant REWARDROUTER_MOLDVESTER_TRANSFERREDCUMULATIVEREWARDS_GREATER_0                     = \\\"RewardRouter: MoldVester.transferredCumulativeRewards > 0\\\";\\n    string internal constant REWARDROUTER_STAKEDMLPTRACKER_AVERAGESTAKEDAMOUNTS_GREATER_0                       = \\\"RewardRouter: stakedMlpTracker.averageStakedAmounts > 0\\\";\\n    string internal constant REWARDROUTER_STAKEDMLPTRACKER_CUMULATIVEREWARDS_GREATER_0                          = \\\"RewardRouter: stakedMlpTracker.cumulativeRewards > 0\\\";\\n    string internal constant REWARDROUTER_FEEMLPTRACKER_AVERAGESTAKEDAMOUNTS_GREATER_0                          = \\\"RewardRouter: feeMlpTracker.averageStakedAmounts > 0\\\";\\n    string internal constant REWARDROUTER_FEEMLPTRACKER_CUMULATIVEREWARDS_GREATER_0                             = \\\"RewardRouter: feeMlpTracker.cumulativeRewards > 0\\\";\\n    string internal constant REWARDROUTER_MOLDVESTER_BALANCE_GREATER_0          = \\\"RewardRouter: MoldVester.balance > 0\\\";\\n    string internal constant REWARDROUTER_MLPVESTER_BALANCE_GREATER_0           = \\\"RewardRouter: MlpVester.balance > 0\\\";\\n\\n}\\n\",\"keccak256\":\"0x2d6c5a1032ea8a6b12bcb7fde4f03a3519d67086d21a2a9bf4ea541db73bdbc5\",\"license\":\"MIT\"},\"contracts/libraries/Events.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\nlibrary Events {\\n    /* BasePositionManager Events */\\n    event SetDepositFee(uint256 depositFee);\\n    event SetIncreasePositionBufferBps(uint256 increasePositionBufferBps);\\n    event SetReferralStorage(address referralStorage);\\n    event SetAdmin(address admin);\\n    event WithdrawFees(address token, address receiver, uint256 amount);\\n    event SetMaxGlobalSizes(address[] tokens, uint256[] longSizes, uint256[] shortSizes);\\n    event IncreasePositionReferral(address account, uint256 sizeDelta, uint256 marginFeeBasisPoints, bytes32 referralCode, address referrer);\\n    event DecreasePositionReferral(address account, uint256 sizeDelta, uint256 marginFeeBasisPoints, bytes32 referralCode, address referrer);\\n\\n    /*Position Manager Events*/\\n    event SetOrderKeeper(address indexed account, bool isActive);\\n    event SetLiquidator(address indexed account, bool isActive);\\n    event SetPartner(address account, bool isActive);\\n    event SetOpened(bool opened);\\n    event SetShouldValidateIncreaseOrder(bool shouldValidateIncreaseOrder);\\n\\n\\n    /* Orderbook.sol events */\\n    event CreateIncreaseOrder(address indexed account, uint256 orderIndex, address purchaseToken, uint256 purchaseTokenAmount, address collateralToken, address indexToken, uint256 sizeDelta, bool isLong, uint256 triggerPrice, bool triggerAboveThreshold, uint256 executionFee);\\n    event CancelIncreaseOrder(address indexed account, uint256 orderIndex, address purchaseToken, uint256 purchaseTokenAmount, address collateralToken, address indexToken, uint256 sizeDelta, bool isLong, uint256 triggerPrice, bool triggerAboveThreshold, uint256 executionFee);\\n    event ExecuteIncreaseOrder(address indexed account, uint256 orderIndex, address purchaseToken, uint256 purchaseTokenAmount, address collateralToken, address indexToken, uint256 sizeDelta, bool isLong, uint256 triggerPrice, bool triggerAboveThreshold, uint256 executionFee, uint256 executionPrice);\\n    event UpdateIncreaseOrder(address indexed account, uint256 orderIndex, address collateralToken, address indexToken, bool isLong, uint256 sizeDelta, uint256 triggerPrice, bool triggerAboveThreshold);\\n    event CreateDecreaseOrder(address indexed account, uint256 orderIndex, address collateralToken, uint256 collateralDelta, address indexToken, uint256 sizeDelta, bool isLong, uint256 triggerPrice, bool triggerAboveThreshold, uint256 executionFee);\\n    event CancelDecreaseOrder(address indexed account, uint256 orderIndex, address collateralToken, uint256 collateralDelta, address indexToken, uint256 sizeDelta, bool isLong, uint256 triggerPrice, bool triggerAboveThreshold, uint256 executionFee);\\n    event ExecuteDecreaseOrder(address indexed account, uint256 orderIndex, address collateralToken, uint256 collateralDelta, address indexToken, uint256 sizeDelta, bool isLong, uint256 triggerPrice, bool triggerAboveThreshold, uint256 executionFee, uint256 executionPrice);\\n    event UpdateDecreaseOrder(address indexed account, uint256 orderIndex, address collateralToken, uint256 collateralDelta, address indexToken, uint256 sizeDelta, bool isLong, uint256 triggerPrice, bool triggerAboveThreshold);\\n    event CreateSwapOrder(address indexed account, uint256 orderIndex, address[] path, uint256 amountIn, uint256 minOut, uint256 triggerRatio, bool triggerAboveThreshold, bool shouldUnwrap, uint256 executionFee);\\n    event CancelSwapOrder(address indexed account, uint256 orderIndex, address[] path, uint256 amountIn, uint256 minOut, uint256 triggerRatio, bool triggerAboveThreshold, bool shouldUnwrap, uint256 executionFee);\\n    event UpdateSwapOrder(address indexed account, uint256 ordexIndex, address[] path, uint256 amountIn, uint256 minOut, uint256 triggerRatio, bool triggerAboveThreshold, bool shouldUnwrap, uint256 executionFee);\\n    event ExecuteSwapOrder(address indexed account, uint256 orderIndex, address[] path, uint256 amountIn, uint256 minOut, uint256 amountOut, uint256 triggerRatio, bool triggerAboveThreshold, bool shouldUnwrap, uint256 executionFee);\\n    event Initialize(address router, address vault, address weth, address usdm, uint256 minExecutionFee, uint256 minPurchaseTokenAmountUsd);\\n    event UpdateMinExecutionFee(uint256 minExecutionFee);\\n    event UpdateMinPurchaseTokenAmountUsd(uint256 minPurchaseTokenAmountUsd);\\n    event UpdateGov(address gov);\\n\\n    /* Router.sol events*/\\n    event Swap(address account, address tokenIn, address tokenOut, uint256 amountIn, uint256 amountOut);\\n\\n    /* ShortsTracker.sol events*/\\n    event GlobalShortDataUpdated(address indexed token, uint256 globalShortSize, uint256 globalShortAveragePrice);\\n\\n    /* Vault.sol events */\\n    event BuyUSDM(address account, address token, uint256 tokenAmount, uint256 usdmAmount, uint256 feeBasisPoints);\\n    event SellUSDM(address account, address token, uint256 usdmAmount, uint256 tokenAmount, uint256 feeBasisPoints);\\n    event Swap(address account, address tokenIn, address tokenOut, uint256 amountIn, uint256 amountOut, uint256 amountOutAfterFees, uint256 feeBasisPoints);\\n    event IncreasePosition(bytes32 key, address account, address collateralToken, address indexToken, uint256 collateralDelta, uint256 sizeDelta, bool isLong, uint256 price, uint256 fee);\\n    event DecreasePosition(bytes32 key, address account, address collateralToken, address indexToken, uint256 collateralDelta, uint256 sizeDelta, bool isLong, uint256 price, uint256 fee);\\n    event LiquidatePosition(bytes32 key, address account, address collateralToken, address indexToken, bool isLong, uint256 size, uint256 collateral, uint256 reserveAmount, int256 realisedPnl, uint256 markPrice);\\n    event UpdatePosition(bytes32 key, uint256 size, uint256 collateral, uint256 averagePrice, uint256 entryFundingRate, uint256 reserveAmount, int256 realisedPnl, uint256 markPrice);\\n    event ClosePosition(bytes32 key, uint256 size, uint256 collateral, uint256 averagePrice, uint256 entryFundingRate, uint256 reserveAmount, int256 realisedPnl);\\n    event UpdateFundingRate(address token, uint256 fundingRate);\\n    event UpdatePnl(bytes32 key, bool hasProfit, uint256 delta);\\n    event CollectSwapFees(address token, uint256 feeUsd, uint256 feeTokens);\\n    event CollectMarginFees(address token, uint256 feeUsd, uint256 feeTokens);\\n    event DirectPoolDeposit(address token, uint256 amount);\\n    event IncreasePoolAmount(address token, uint256 amount);\\n    event DecreasePoolAmount(address token, uint256 amount);\\n    event IncreaseUsdmAmount(address token, uint256 amount);\\n    event DecreaseUsdmAmount(address token, uint256 amount);\\n    event IncreaseReservedAmount(address token, uint256 amount);\\n    event DecreaseReservedAmount(address token, uint256 amount);\\n    event IncreaseGuaranteedUsd(address token, uint256 amount);\\n    event DecreaseGuaranteedUsd(address token, uint256 amount);\\n\\n    /* Timelock.sol events */\\n    event SignalPendingAction(bytes32 action);\\n    event SignalApprove(address token, address spender, uint256 amount, bytes32 action);\\n    event SignalWithdrawToken(address target, address token, address receiver, uint256 amount, bytes32 action);\\n    event SignalMint(address token, address receiver, uint256 amount, bytes32 action);\\n    event SignalSetGov(address target, address gov, bytes32 action);\\n    event SignalSetHandler(address target, address handler, bool isActive, bytes32 action);\\n    event SignalSetPriceFeed(address vault, address priceFeed, bytes32 action);\\n    event SignalRedeemUsdm(address vault, address token, uint256 amount);\\n    event SignalVaultSetTokenConfig(address vault, address token, uint256 tokenDecimals, uint256 tokenWeight, uint256 minProfitBps, uint256 maxUsdmAmount, bool isStable, bool isShortable);\\n    event ClearAction(bytes32 action);\\n\\n    /* MlpManager.sol */\\n    event AddLiquidity(address account, address token, uint256 amount, uint256 aumInUsdm, uint256 mlpSupply, uint256 usdmAmount, uint256 mintAmount);\\n    event RemoveLiquidity(address account, address token, uint256 mlpAmount, uint256 aumInUsdm, uint256 mlpSupply, uint256 usdmAmount, uint256 amountOut);\\n\\n    /* RewardRouterV2 */\\n    event StakeMold(address account, address token, uint256 amount);\\n    event UnstakeMold(address account, address token, uint256 amount);\\n    event StakeMlp(address account, uint256 amount);\\n    event UnstakeMlp(address account, uint256 amount);\\n}\\n\",\"keccak256\":\"0x555bd8706eac18f05cbc296299b1379465408d2040130886612e55bbddbb7179\",\"license\":\"MIT\"},\"contracts/libraries/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x41b0da7db3e1f79b338824fed2bc4732430b78002a9d51c2cfa86ad5a12c2763\",\"license\":\"MIT\"},\"contracts/libraries/token/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xa3ce253082421a9e79d2b884ae6f60507b0cc73ea356674072091454c44cc556\",\"license\":\"MIT\"},\"contracts/libraries/token/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../math/SafeMath.sol\\\";\\nimport \\\"../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf80766b21ea67a73c81e0dea4543375243938c8b223e29c5d783be61ab3f424c\",\"license\":\"MIT\"},\"contracts/libraries/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.2;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x1845481964ebacf35afe1a006fa574793b52e698eba0a8db6e3d30202bc45429\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IWETH.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\ninterface IWETH {\\n    function deposit() external payable;\\n    function transfer(address to, uint value) external returns (bool);\\n    function withdraw(uint) external;\\n}\",\"keccak256\":\"0x9322725581103de3f494f25318f2ebaf50100d57c2631a26d4c253833bc6bc23\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516127733803806127738339818101604052606081101561003357600080fd5b5080516020820151604090920151600380546001600160a01b039384166001600160a01b0319918216179091556002805494841694821694909417909355600180549290911691831691909117905560008054909116331790556126d78061009c6000396000f3fe60806040526004361061011f5760003560e01c806312d43a51146101f05780631b827878146102215780631f1dd1761461026c5780632662166b146102bd5780632d4ba6a7146103305780633039e37f146103f257806338c74dd9146104d25780633fc8cef314610505578063430ed37c1461051a5780634b12e643146105795780635fc8500e146105c05780636023e966146106a057806390205d8c1461076257806390b64ad3146107c1578063956f285e146107fa578063a4d95b6414610835578063abe68eaa14610868578063b32755de14610917578063b7ddc992146109da578063cedd437514610ab0578063cfad57a214610ae3578063d8867fc814610b16578063ee138d0f14610b49578063fbfa77cf14610b5e576101eb565b366101eb576001546040805180820190915260168152752937baba32b91d1034b73b30b634b21039b2b73232b960511b6020820152906001600160a01b031633146101e85760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156101ad578181015183820152602001610195565b50505050905090810190601f1680156101da5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50005b600080fd5b3480156101fc57600080fd5b50610205610b73565b604080516001600160a01b039092168252519081900360200190f35b34801561022d57600080fd5b5061026a6004803603608081101561024457600080fd5b506001600160a01b03813581169160208101358216916040820135169060600135610b82565b005b34801561027857600080fd5b5061026a600480360360a081101561028f57600080fd5b506001600160a01b038135811691602081013582169160408201351690606081013590608001351515610ba6565b3480156102c957600080fd5b5061031e600480360360e08110156102e057600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359160808201359160a081013515159160c09091013516610c3b565b60408051918252519081900360200190f35b34801561033c57600080fd5b5061026a6004803603608081101561035357600080fd5b810190602081018135600160201b81111561036d57600080fd5b82018360208201111561037f57600080fd5b803590602001918460208302840111600160201b831117156103a057600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050823593505050602081013590604001356001600160a01b0316610cfb565b3480156103fe57600080fd5b5061026a600480360361010081101561041657600080fd5b810190602081018135600160201b81111561043057600080fd5b82018360208201111561044257600080fd5b803590602001918460208302840111600160201b8311171561046357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505081356001600160a01b0390811693506020830135926040810135925060608101351515916080820135169060a08101359060c00135610e94565b3480156104de57600080fd5b5061026a600480360360208110156104f557600080fd5b50356001600160a01b0316610fcb565b34801561051157600080fd5b50610205610ffc565b34801561052657600080fd5b5061026a600480360360e081101561053d57600080fd5b506001600160a01b0381358116916020810135821691604082013591606081013591608082013515159160a08101359091169060c0013561100b565b34801561058557600080fd5b506105ac6004803603602081101561059c57600080fd5b50356001600160a01b0316611032565b604080519115158252519081900360200190f35b3480156105cc57600080fd5b5061026a60048036036101008110156105e457600080fd5b810190602081018135600160201b8111156105fe57600080fd5b82018360208201111561061057600080fd5b803590602001918460208302840111600160201b8311171561063157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505081356001600160a01b0390811693506020830135926040810135925060608101351515916080820135169060a08101359060c00135611047565b3480156106ac57600080fd5b5061026a600480360360808110156106c357600080fd5b810190602081018135600160201b8111156106dd57600080fd5b8201836020820111156106ef57600080fd5b803590602001918460208302840111600160201b8311171561071057600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050823593505050602081013590604001356001600160a01b031661108d565b34801561076e57600080fd5b5061026a600480360360e081101561078557600080fd5b506001600160a01b0381358116916020810135821691604082013591606081013591608082013515159160a08101359091169060c001356110c4565b3480156107cd57600080fd5b5061026a600480360360408110156107e457600080fd5b506001600160a01b0381351690602001356110d3565b34801561080657600080fd5b506105ac6004803603604081101561081d57600080fd5b506001600160a01b038135811691602001351661115f565b34801561084157600080fd5b5061026a6004803603602081101561085857600080fd5b50356001600160a01b031661117f565b61026a6004803603606081101561087e57600080fd5b810190602081018135600160201b81111561089857600080fd5b8201836020820111156108aa57600080fd5b803590602001918460208302840111600160201b831117156108cb57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050823593505050602001356001600160a01b0316611223565b61026a600480360360c081101561092d57600080fd5b810190602081018135600160201b81111561094757600080fd5b82018360208201111561095957600080fd5b803590602001918460208302840111600160201b8311171561097a57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550506001600160a01b038335169350505060208101359060408101359060608101351515906080013561136a565b3480156109e657600080fd5b5061026a600480360360e08110156109fd57600080fd5b810190602081018135600160201b811115610a1757600080fd5b820183602082011115610a2957600080fd5b803590602001918460208302840111600160201b83111715610a4a57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550506001600160a01b0383351693505050602081013590604081013590606081013590608081013515159060a0013561148c565b348015610abc57600080fd5b5061026a60048036036020811015610ad357600080fd5b50356001600160a01b0316611539565b348015610aef57600080fd5b5061026a60048036036020811015610b0657600080fd5b50356001600160a01b0316611567565b348015610b2257600080fd5b5061026a60048036036020811015610b3957600080fd5b50356001600160a01b031661160c565b348015610b5557600080fd5b506102056116b3565b348015610b6a57600080fd5b506102056116c2565b6000546001600160a01b031681565b610b8b836116d1565b610ba06001600160a01b03851684848461180a565b50505050565b610baf856116d1565b600354604080516348d91abf60e01b81526001600160a01b03888116600483015287811660248301528681166044830152606482018690528415156084830152915191909216916348d91abf9160a480830192600092919082900301818387803b158015610c1c57600080fd5b505af1158015610c30573d6000803e3d6000fd5b505050505050505050565b6000610c46886116d1565b6003546040805163082a084960e41b81526001600160a01b038b811660048301528a811660248301528981166044830152606482018990526084820188905286151560a483015285811660c4830152915191909216916382a084909160e48083019260209291908290030181600087803b158015610cc357600080fd5b505af1158015610cd7573d6000803e3d6000fd5b505050506040513d6020811015610ced57600080fd5b505198975050505050505050565b60015484516001600160a01b039091169085906000198101908110610d1c57fe5b60200260200101516001600160a01b03161460405180604001604052806015815260200160008051602061259183398151915281525090610d9e5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b50610de9610daa611864565b60035486516001600160a01b039091169086908890600090610dc857fe5b60200260200101516001600160a01b031661180a909392919063ffffffff16565b6000610df6858430611868565b9050610e0281836119d3565b6000805160206126348339815191523386600081518110610e1f57fe5b602002602001015187600189510381518110610e3757fe5b6020026020010151878560405180866001600160a01b03168152602001856001600160a01b03168152602001846001600160a01b031681526020018381526020018281526020019550505050505060405180910390a15050505050565b60015488516001600160a01b039091169089906000198101908110610eb557fe5b60200260200101516001600160a01b03161460405180604001604052806015815260200160008051602061259183398151915281525090610f375760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b506000610f5d89600081518110610f4a57fe5b6020026020010151898989893089611a4c565b9050610fa6600360009054906101000a90046001600160a01b0316828b600081518110610f8657fe5b60200260200101516001600160a01b0316611cb69092919063ffffffff16565b6000610fb38a8430611868565b9050610fbf81866119d3565b50505050505050505050565b3360009081526005602090815260408083206001600160a01b0394909416835292905220805460ff19166001179055565b6001546001600160a01b031681565b600061101c88888888883088611a4c565b905061102881846119d3565b5050505050505050565b60046020526000908152604090205460ff1681565b600061105989600081518110610f4a57fe5b9050611082600360009054906101000a90046001600160a01b0316828b600081518110610f8657fe5b610fbf898386611868565b611098610daa611864565b60006110a5858484611868565b90506000805160206126348339815191523386600081518110610e1f57fe5b61102887878787878787611a4c565b6110f56110de611864565b6003546001600160a01b038581169291168461180a565b60035460408051635f7bc11960e01b81526001600160a01b03858116600483015291519190921691635f7bc11991602480830192600092919082900301818387803b15801561114357600080fd5b505af1158015611157573d6000803e3d6000fd5b505050505050565b600560209081526000928352604080842090915290825290205460ff1681565b6000546040805180820190915260118152702937baba32b91d103337b93134b23232b760791b6020820152906001600160a01b031633146112015760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b506001600160a01b03166000908152600460205260409020805460ff19169055565b60015483516001600160a01b0390911690849060009061123f57fe5b60200260200101516001600160a01b031614604051806040016040528060158152602001600080516020612591833981519152815250906112c15760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b506112ca611d0d565b60006112d7848484611868565b905060008051602061263483398151915233856000815181106112f657fe5b60200260200101518660018851038151811061130e57fe5b6020026020010151348560405180866001600160a01b03168152602001856001600160a01b03168152602001846001600160a01b031681526020018381526020018281526020019550505050505060405180910390a150505050565b60015486516001600160a01b0390911690879060009061138657fe5b60200260200101516001600160a01b031614604051806040016040528060158152602001600080516020612591833981519152815250906114085760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b50341561141757611417611d0d565b600186511180156114285750600034115b1561146857600061143a878630611868565b9050611466600360009054906101000a90046001600160a01b0316828960018b510381518110610f8657fe5b505b6111578660018851038151811061147b57fe5b602002602001015186858585611d96565b84156114bb576114bb61149d611864565b60035489516001600160a01b039091169088908b90600090610dc857fe5b600187511180156114cc5750600085115b1561150c5760006114de888630611868565b905061150a600360009054906101000a90046001600160a01b0316828a60018c510381518110610f8657fe5b505b6115308760018951038151811061151f57fe5b602002602001015187858585611d96565b50505050505050565b3360009081526005602090815260408083206001600160a01b0394909416835292905220805460ff19169055565b6000546040805180820190915260118152702937baba32b91d103337b93134b23232b760791b6020820152906001600160a01b031633146115e95760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b50600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546040805180820190915260118152702937baba32b91d103337b93134b23232b760791b6020820152906001600160a01b0316331461168e5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b506001600160a01b03166000908152600460205260409020805460ff19166001179055565b6002546001600160a01b031681565b6003546001600160a01b031681565b3360009081526004602090815260409182902054825180840190935260168352752937baba32b91d1034b73b30b634b21038363ab3b4b760511b9183019190915260ff166117605760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b506001600160a01b0381166000908152600560209081526040808320338452825291829020548251808401909352601b83527a149bdd5d195c8e881c1b1d59da5b881b9bdd08185c1c1c9bdd9959602a1b9183019190915260ff166118065760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b5050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610ba0908590611fee565b3390565b60008351600214156118af576118a88460008151811061188457fe5b60200260200101518560018151811061189957fe5b6020026020010151858561209f565b90506119cc565b8351600314156119555760006118f0856000815181106118cb57fe5b6020026020010151866001815181106118e057fe5b602002602001015160003061209f565b9050611919600360009054906101000a90046001600160a01b03168287600181518110610f8657fe5b61194d8560018151811061192957fe5b60200260200101518660028151811061193e57fe5b6020026020010151868661209f565b9150506119cc565b604080518082018252601c81527b0a4deeae8cae47440d2dcecc2d8d2c840bee0c2e8d05cd8cadccee8d60231b6020808301918252925162461bcd60e51b815260048101938452825160248201528251929392839260449092019190808383600083156101ad578181015183820152602001610195565b9392505050565b60015460408051632e1a7d4d60e01b81526004810185905290516001600160a01b0390921691632e1a7d4d9160248082019260009290919082900301818387803b158015611a2057600080fd5b505af1158015611a34573d6000803e3d6000fd5b50611806925050506001600160a01b038216836122cc565b60008315611b4057600354604080516340d3096b60e11b81526001600160a01b038a811660048301529151859392909216916381a612d691602480820192602092909190829003018186803b158015611aa457600080fd5b505afa158015611ab8573d6000803e3d6000fd5b505050506040513d6020811015611ace57600080fd5b505160408051606081019091526023808252929091101591612611602083013990611b3a5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b50611c28565b60035460408051637092736960e11b81526001600160a01b038a8116600483015291518593929092169163e124e6d291602480820192602092909190829003018186803b158015611b9057600080fd5b505afa158015611ba4573d6000803e3d6000fd5b505050506040513d6020811015611bba57600080fd5b50516040805160608101909152602480825292909111159161267e602083013990611c265760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b505b6003546001600160a01b03166382a08490611c41611864565b604080516001600160e01b031960e085901b1681526001600160a01b039283166004820152828d166024820152828c166044820152606481018b9052608481018a905288151560a482015291871660c48301525160e48083019260209291908290030181600087803b158015610cc357600080fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611d08908490611fee565b505050565b600160009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b158015611d5d57600080fd5b505af1158015611d71573d6000803e3d6000fd5b5050600354600154611d9494506001600160a01b03908116935016905034611cb6565b565b8115611e885760035460408051637092736960e11b81526001600160a01b03878116600483015291518493929092169163e124e6d291602480820192602092909190829003018186803b158015611dec57600080fd5b505afa158015611e00573d6000803e3d6000fd5b505050506040513d6020811015611e1657600080fd5b50516040805160608101909152602480825292909111159161267e602083013990611e825760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b50611f70565b600354604080516340d3096b60e11b81526001600160a01b0387811660048301529151849392909216916381a612d691602480820192602092909190829003018186803b158015611ed857600080fd5b505afa158015611eec573d6000803e3d6000fd5b505050506040513d6020811015611f0257600080fd5b505160408051606081019091526023808252929091101591612611602083013990611f6e5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b505b6003546001600160a01b03166348d91abf611f89611864565b604080516001600160e01b031960e085901b1681526001600160a01b039283166004820152828a16602482015291881660448301526064820187905285151560848301525160a480830192600092919082900301818387803b158015610c1c57600080fd5b6060612043826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123b19092919063ffffffff16565b805190915015611d085780806020019051602081101561206257600080fd5b5051611d085760405162461bcd60e51b815260040180806020018281038252602a815260200180612654602a913960400191505060405180910390fd5b60025460009081906001600160a01b038681169116141561214457600354604080516386284f5f60e01b81526001600160a01b0389811660048301528681166024830152915191909216916386284f5f9160448083019260209291908290030181600087803b15801561211157600080fd5b505af1158015612125573d6000803e3d6000fd5b505050506040513d602081101561213b57600080fd5b5051905061223f565b6002546001600160a01b03878116911614156121b15760035460408051630125149f60e31b81526001600160a01b038881166004830152868116602483015291519190921691630928a4f89160448083019260209291908290030181600087803b15801561211157600080fd5b60035460408051634998b10960e11b81526001600160a01b038981166004830152888116602483015286811660448301529151919092169163933162129160648083019260209291908290030181600087803b15801561221057600080fd5b505af1158015612224573d6000803e3d6000fd5b505050506040513d602081101561223a57600080fd5b505190505b60408051808201909152601e81527f526f757465723a20696e73756666696369656e7420616d6f756e744f757400006020820152848210156122c25760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b5095945050505050565b80471015612321576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d806000811461236c576040519150601f19603f3d011682016040523d82523d6000602084013e612371565b606091505b5050905080611d085760405162461bcd60e51b815260040180806020018281038252603a8152602001806125b1603a913960400191505060405180910390fd5b60606123c084846000856123c8565b949350505050565b6060824710156124095760405162461bcd60e51b81526004018080602001828103825260268152602001806125eb6026913960400191505060405180910390fd5b61241285612524565b612463576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106124a25780518252601f199092019160209182019101612483565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612504576040519150601f19603f3d011682016040523d82523d6000602084013e612509565b606091505b509150915061251982828661252a565b979650505050505050565b3b151590565b606083156125395750816119cc565b8251156125495782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156101ad57818101518382015260200161019556fe526f757465723a20696e76616c6964205f706174680000000000000000000000416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c526f757465723a206d61726b207072696365206c6f776572207468616e206c696d6974cd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460625361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564526f757465723a206d61726b20707269636520686967686572207468616e206c696d6974a26469706673582212206901096c1ff319e800b7d085e3aaa1b6967ed2976a7c967037536895d118978464736f6c634300060c0033",
  "deployedBytecode": "0x60806040526004361061011f5760003560e01c806312d43a51146101f05780631b827878146102215780631f1dd1761461026c5780632662166b146102bd5780632d4ba6a7146103305780633039e37f146103f257806338c74dd9146104d25780633fc8cef314610505578063430ed37c1461051a5780634b12e643146105795780635fc8500e146105c05780636023e966146106a057806390205d8c1461076257806390b64ad3146107c1578063956f285e146107fa578063a4d95b6414610835578063abe68eaa14610868578063b32755de14610917578063b7ddc992146109da578063cedd437514610ab0578063cfad57a214610ae3578063d8867fc814610b16578063ee138d0f14610b49578063fbfa77cf14610b5e576101eb565b366101eb576001546040805180820190915260168152752937baba32b91d1034b73b30b634b21039b2b73232b960511b6020820152906001600160a01b031633146101e85760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156101ad578181015183820152602001610195565b50505050905090810190601f1680156101da5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50005b600080fd5b3480156101fc57600080fd5b50610205610b73565b604080516001600160a01b039092168252519081900360200190f35b34801561022d57600080fd5b5061026a6004803603608081101561024457600080fd5b506001600160a01b03813581169160208101358216916040820135169060600135610b82565b005b34801561027857600080fd5b5061026a600480360360a081101561028f57600080fd5b506001600160a01b038135811691602081013582169160408201351690606081013590608001351515610ba6565b3480156102c957600080fd5b5061031e600480360360e08110156102e057600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359160808201359160a081013515159160c09091013516610c3b565b60408051918252519081900360200190f35b34801561033c57600080fd5b5061026a6004803603608081101561035357600080fd5b810190602081018135600160201b81111561036d57600080fd5b82018360208201111561037f57600080fd5b803590602001918460208302840111600160201b831117156103a057600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050823593505050602081013590604001356001600160a01b0316610cfb565b3480156103fe57600080fd5b5061026a600480360361010081101561041657600080fd5b810190602081018135600160201b81111561043057600080fd5b82018360208201111561044257600080fd5b803590602001918460208302840111600160201b8311171561046357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505081356001600160a01b0390811693506020830135926040810135925060608101351515916080820135169060a08101359060c00135610e94565b3480156104de57600080fd5b5061026a600480360360208110156104f557600080fd5b50356001600160a01b0316610fcb565b34801561051157600080fd5b50610205610ffc565b34801561052657600080fd5b5061026a600480360360e081101561053d57600080fd5b506001600160a01b0381358116916020810135821691604082013591606081013591608082013515159160a08101359091169060c0013561100b565b34801561058557600080fd5b506105ac6004803603602081101561059c57600080fd5b50356001600160a01b0316611032565b604080519115158252519081900360200190f35b3480156105cc57600080fd5b5061026a60048036036101008110156105e457600080fd5b810190602081018135600160201b8111156105fe57600080fd5b82018360208201111561061057600080fd5b803590602001918460208302840111600160201b8311171561063157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505081356001600160a01b0390811693506020830135926040810135925060608101351515916080820135169060a08101359060c00135611047565b3480156106ac57600080fd5b5061026a600480360360808110156106c357600080fd5b810190602081018135600160201b8111156106dd57600080fd5b8201836020820111156106ef57600080fd5b803590602001918460208302840111600160201b8311171561071057600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050823593505050602081013590604001356001600160a01b031661108d565b34801561076e57600080fd5b5061026a600480360360e081101561078557600080fd5b506001600160a01b0381358116916020810135821691604082013591606081013591608082013515159160a08101359091169060c001356110c4565b3480156107cd57600080fd5b5061026a600480360360408110156107e457600080fd5b506001600160a01b0381351690602001356110d3565b34801561080657600080fd5b506105ac6004803603604081101561081d57600080fd5b506001600160a01b038135811691602001351661115f565b34801561084157600080fd5b5061026a6004803603602081101561085857600080fd5b50356001600160a01b031661117f565b61026a6004803603606081101561087e57600080fd5b810190602081018135600160201b81111561089857600080fd5b8201836020820111156108aa57600080fd5b803590602001918460208302840111600160201b831117156108cb57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050823593505050602001356001600160a01b0316611223565b61026a600480360360c081101561092d57600080fd5b810190602081018135600160201b81111561094757600080fd5b82018360208201111561095957600080fd5b803590602001918460208302840111600160201b8311171561097a57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550506001600160a01b038335169350505060208101359060408101359060608101351515906080013561136a565b3480156109e657600080fd5b5061026a600480360360e08110156109fd57600080fd5b810190602081018135600160201b811115610a1757600080fd5b820183602082011115610a2957600080fd5b803590602001918460208302840111600160201b83111715610a4a57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550506001600160a01b0383351693505050602081013590604081013590606081013590608081013515159060a0013561148c565b348015610abc57600080fd5b5061026a60048036036020811015610ad357600080fd5b50356001600160a01b0316611539565b348015610aef57600080fd5b5061026a60048036036020811015610b0657600080fd5b50356001600160a01b0316611567565b348015610b2257600080fd5b5061026a60048036036020811015610b3957600080fd5b50356001600160a01b031661160c565b348015610b5557600080fd5b506102056116b3565b348015610b6a57600080fd5b506102056116c2565b6000546001600160a01b031681565b610b8b836116d1565b610ba06001600160a01b03851684848461180a565b50505050565b610baf856116d1565b600354604080516348d91abf60e01b81526001600160a01b03888116600483015287811660248301528681166044830152606482018690528415156084830152915191909216916348d91abf9160a480830192600092919082900301818387803b158015610c1c57600080fd5b505af1158015610c30573d6000803e3d6000fd5b505050505050505050565b6000610c46886116d1565b6003546040805163082a084960e41b81526001600160a01b038b811660048301528a811660248301528981166044830152606482018990526084820188905286151560a483015285811660c4830152915191909216916382a084909160e48083019260209291908290030181600087803b158015610cc357600080fd5b505af1158015610cd7573d6000803e3d6000fd5b505050506040513d6020811015610ced57600080fd5b505198975050505050505050565b60015484516001600160a01b039091169085906000198101908110610d1c57fe5b60200260200101516001600160a01b03161460405180604001604052806015815260200160008051602061259183398151915281525090610d9e5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b50610de9610daa611864565b60035486516001600160a01b039091169086908890600090610dc857fe5b60200260200101516001600160a01b031661180a909392919063ffffffff16565b6000610df6858430611868565b9050610e0281836119d3565b6000805160206126348339815191523386600081518110610e1f57fe5b602002602001015187600189510381518110610e3757fe5b6020026020010151878560405180866001600160a01b03168152602001856001600160a01b03168152602001846001600160a01b031681526020018381526020018281526020019550505050505060405180910390a15050505050565b60015488516001600160a01b039091169089906000198101908110610eb557fe5b60200260200101516001600160a01b03161460405180604001604052806015815260200160008051602061259183398151915281525090610f375760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b506000610f5d89600081518110610f4a57fe5b6020026020010151898989893089611a4c565b9050610fa6600360009054906101000a90046001600160a01b0316828b600081518110610f8657fe5b60200260200101516001600160a01b0316611cb69092919063ffffffff16565b6000610fb38a8430611868565b9050610fbf81866119d3565b50505050505050505050565b3360009081526005602090815260408083206001600160a01b0394909416835292905220805460ff19166001179055565b6001546001600160a01b031681565b600061101c88888888883088611a4c565b905061102881846119d3565b5050505050505050565b60046020526000908152604090205460ff1681565b600061105989600081518110610f4a57fe5b9050611082600360009054906101000a90046001600160a01b0316828b600081518110610f8657fe5b610fbf898386611868565b611098610daa611864565b60006110a5858484611868565b90506000805160206126348339815191523386600081518110610e1f57fe5b61102887878787878787611a4c565b6110f56110de611864565b6003546001600160a01b038581169291168461180a565b60035460408051635f7bc11960e01b81526001600160a01b03858116600483015291519190921691635f7bc11991602480830192600092919082900301818387803b15801561114357600080fd5b505af1158015611157573d6000803e3d6000fd5b505050505050565b600560209081526000928352604080842090915290825290205460ff1681565b6000546040805180820190915260118152702937baba32b91d103337b93134b23232b760791b6020820152906001600160a01b031633146112015760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b506001600160a01b03166000908152600460205260409020805460ff19169055565b60015483516001600160a01b0390911690849060009061123f57fe5b60200260200101516001600160a01b031614604051806040016040528060158152602001600080516020612591833981519152815250906112c15760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b506112ca611d0d565b60006112d7848484611868565b905060008051602061263483398151915233856000815181106112f657fe5b60200260200101518660018851038151811061130e57fe5b6020026020010151348560405180866001600160a01b03168152602001856001600160a01b03168152602001846001600160a01b031681526020018381526020018281526020019550505050505060405180910390a150505050565b60015486516001600160a01b0390911690879060009061138657fe5b60200260200101516001600160a01b031614604051806040016040528060158152602001600080516020612591833981519152815250906114085760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b50341561141757611417611d0d565b600186511180156114285750600034115b1561146857600061143a878630611868565b9050611466600360009054906101000a90046001600160a01b0316828960018b510381518110610f8657fe5b505b6111578660018851038151811061147b57fe5b602002602001015186858585611d96565b84156114bb576114bb61149d611864565b60035489516001600160a01b039091169088908b90600090610dc857fe5b600187511180156114cc5750600085115b1561150c5760006114de888630611868565b905061150a600360009054906101000a90046001600160a01b0316828a60018c510381518110610f8657fe5b505b6115308760018951038151811061151f57fe5b602002602001015187858585611d96565b50505050505050565b3360009081526005602090815260408083206001600160a01b0394909416835292905220805460ff19169055565b6000546040805180820190915260118152702937baba32b91d103337b93134b23232b760791b6020820152906001600160a01b031633146115e95760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b50600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546040805180820190915260118152702937baba32b91d103337b93134b23232b760791b6020820152906001600160a01b0316331461168e5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b506001600160a01b03166000908152600460205260409020805460ff19166001179055565b6002546001600160a01b031681565b6003546001600160a01b031681565b3360009081526004602090815260409182902054825180840190935260168352752937baba32b91d1034b73b30b634b21038363ab3b4b760511b9183019190915260ff166117605760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b506001600160a01b0381166000908152600560209081526040808320338452825291829020548251808401909352601b83527a149bdd5d195c8e881c1b1d59da5b881b9bdd08185c1c1c9bdd9959602a1b9183019190915260ff166118065760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b5050565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610ba0908590611fee565b3390565b60008351600214156118af576118a88460008151811061188457fe5b60200260200101518560018151811061189957fe5b6020026020010151858561209f565b90506119cc565b8351600314156119555760006118f0856000815181106118cb57fe5b6020026020010151866001815181106118e057fe5b602002602001015160003061209f565b9050611919600360009054906101000a90046001600160a01b03168287600181518110610f8657fe5b61194d8560018151811061192957fe5b60200260200101518660028151811061193e57fe5b6020026020010151868661209f565b9150506119cc565b604080518082018252601c81527b0a4deeae8cae47440d2dcecc2d8d2c840bee0c2e8d05cd8cadccee8d60231b6020808301918252925162461bcd60e51b815260048101938452825160248201528251929392839260449092019190808383600083156101ad578181015183820152602001610195565b9392505050565b60015460408051632e1a7d4d60e01b81526004810185905290516001600160a01b0390921691632e1a7d4d9160248082019260009290919082900301818387803b158015611a2057600080fd5b505af1158015611a34573d6000803e3d6000fd5b50611806925050506001600160a01b038216836122cc565b60008315611b4057600354604080516340d3096b60e11b81526001600160a01b038a811660048301529151859392909216916381a612d691602480820192602092909190829003018186803b158015611aa457600080fd5b505afa158015611ab8573d6000803e3d6000fd5b505050506040513d6020811015611ace57600080fd5b505160408051606081019091526023808252929091101591612611602083013990611b3a5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b50611c28565b60035460408051637092736960e11b81526001600160a01b038a8116600483015291518593929092169163e124e6d291602480820192602092909190829003018186803b158015611b9057600080fd5b505afa158015611ba4573d6000803e3d6000fd5b505050506040513d6020811015611bba57600080fd5b50516040805160608101909152602480825292909111159161267e602083013990611c265760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b505b6003546001600160a01b03166382a08490611c41611864565b604080516001600160e01b031960e085901b1681526001600160a01b039283166004820152828d166024820152828c166044820152606481018b9052608481018a905288151560a482015291871660c48301525160e48083019260209291908290030181600087803b158015610cc357600080fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611d08908490611fee565b505050565b600160009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b158015611d5d57600080fd5b505af1158015611d71573d6000803e3d6000fd5b5050600354600154611d9494506001600160a01b03908116935016905034611cb6565b565b8115611e885760035460408051637092736960e11b81526001600160a01b03878116600483015291518493929092169163e124e6d291602480820192602092909190829003018186803b158015611dec57600080fd5b505afa158015611e00573d6000803e3d6000fd5b505050506040513d6020811015611e1657600080fd5b50516040805160608101909152602480825292909111159161267e602083013990611e825760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b50611f70565b600354604080516340d3096b60e11b81526001600160a01b0387811660048301529151849392909216916381a612d691602480820192602092909190829003018186803b158015611ed857600080fd5b505afa158015611eec573d6000803e3d6000fd5b505050506040513d6020811015611f0257600080fd5b505160408051606081019091526023808252929091101591612611602083013990611f6e5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b505b6003546001600160a01b03166348d91abf611f89611864565b604080516001600160e01b031960e085901b1681526001600160a01b039283166004820152828a16602482015291881660448301526064820187905285151560848301525160a480830192600092919082900301818387803b158015610c1c57600080fd5b6060612043826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123b19092919063ffffffff16565b805190915015611d085780806020019051602081101561206257600080fd5b5051611d085760405162461bcd60e51b815260040180806020018281038252602a815260200180612654602a913960400191505060405180910390fd5b60025460009081906001600160a01b038681169116141561214457600354604080516386284f5f60e01b81526001600160a01b0389811660048301528681166024830152915191909216916386284f5f9160448083019260209291908290030181600087803b15801561211157600080fd5b505af1158015612125573d6000803e3d6000fd5b505050506040513d602081101561213b57600080fd5b5051905061223f565b6002546001600160a01b03878116911614156121b15760035460408051630125149f60e31b81526001600160a01b038881166004830152868116602483015291519190921691630928a4f89160448083019260209291908290030181600087803b15801561211157600080fd5b60035460408051634998b10960e11b81526001600160a01b038981166004830152888116602483015286811660448301529151919092169163933162129160648083019260209291908290030181600087803b15801561221057600080fd5b505af1158015612224573d6000803e3d6000fd5b505050506040513d602081101561223a57600080fd5b505190505b60408051808201909152601e81527f526f757465723a20696e73756666696369656e7420616d6f756e744f757400006020820152848210156122c25760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156101ad578181015183820152602001610195565b5095945050505050565b80471015612321576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d806000811461236c576040519150601f19603f3d011682016040523d82523d6000602084013e612371565b606091505b5050905080611d085760405162461bcd60e51b815260040180806020018281038252603a8152602001806125b1603a913960400191505060405180910390fd5b60606123c084846000856123c8565b949350505050565b6060824710156124095760405162461bcd60e51b81526004018080602001828103825260268152602001806125eb6026913960400191505060405180910390fd5b61241285612524565b612463576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106124a25780518252601f199092019160209182019101612483565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612504576040519150601f19603f3d011682016040523d82523d6000602084013e612509565b606091505b509150915061251982828661252a565b979650505050505050565b3b151590565b606083156125395750816119cc565b8251156125495782518084602001fd5b60405162461bcd60e51b81526020600482018181528451602484015284518593919283926044019190850190808383600083156101ad57818101518382015260200161019556fe526f757465723a20696e76616c6964205f706174680000000000000000000000416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c526f757465723a206d61726b207072696365206c6f776572207468616e206c696d6974cd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460625361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564526f757465723a206d61726b20707269636520686967686572207468616e206c696d6974a26469706673582212206901096c1ff319e800b7d085e3aaa1b6967ed2976a7c967037536895d118978464736f6c634300060c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12643,
        "contract": "contracts/core/Router.sol:Router",
        "label": "gov",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 12645,
        "contract": "contracts/core/Router.sol:Router",
        "label": "weth",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 12647,
        "contract": "contracts/core/Router.sol:Router",
        "label": "usdm",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 12649,
        "contract": "contracts/core/Router.sol:Router",
        "label": "vault",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 12653,
        "contract": "contracts/core/Router.sol:Router",
        "label": "plugins",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 12659,
        "contract": "contracts/core/Router.sol:Router",
        "label": "approvedPlugins",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      }
    }
  }
}