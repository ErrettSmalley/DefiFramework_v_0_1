{
  "address": "0x98737Cd5B3E56F36f48CA50dbd3C722BD4fA3433",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_buffer",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_mintReceiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_mlpManager",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxTokenSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_marginFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarginFeeBasisPoints",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "MAX_BUFFER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_FUNDING_RATE_FACTOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_LEVERAGE_VALIDATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRICE_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vester",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "batchSetBonusRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        }
      ],
      "name": "batchWithdrawFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buffer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_action",
          "type": "bytes32"
        }
      ],
      "name": "cancelAction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "disableLeverage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "enableLeverage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_referralStorage",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_code",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_newAccount",
          "type": "address"
        }
      ],
      "name": "govSetCodeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isHandler",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isKeeper",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marginFeeBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxMarginFeeBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTokenSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mlpManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "pendingActions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "processMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "redeemUsdm",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_buffer",
          "type": "uint256"
        }
      ],
      "name": "setBuffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_handler",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "setContractHandler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "setExternalAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_taxBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stableTaxBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_mintBurnFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_swapFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stableSwapFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_marginFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_liquidationFeeUsd",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minProfitTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_hasDynamicFees",
          "type": "bool"
        }
      ],
      "name": "setFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fundingInterval",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fundingRateFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stableFundingRateFactor",
          "type": "uint256"
        }
      ],
      "name": "setFundingRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        }
      ],
      "name": "setGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_handler",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "setHandler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_inPrivateLiquidationMode",
          "type": "bool"
        }
      ],
      "name": "setInPrivateLiquidationMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_inPrivateTransferMode",
          "type": "bool"
        }
      ],
      "name": "setInPrivateTransferMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isLeverageEnabled",
          "type": "bool"
        }
      ],
      "name": "setIsLeverageEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isSwapEnabled",
          "type": "bool"
        }
      ],
      "name": "setIsSwapEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_keeper",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "setKeeper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_liquidator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "setLiquidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_marginFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarginFeeBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setMarginFeeBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxGasPrice",
          "type": "uint256"
        }
      ],
      "name": "setMaxGasPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setMaxGlobalShortSize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxLeverage",
          "type": "uint256"
        }
      ],
      "name": "setMaxLeverage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "setPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_referralStorage",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_referrer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tierId",
          "type": "uint256"
        }
      ],
      "name": "setReferrerTier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_shouldToggleIsLeverageEnabled",
          "type": "bool"
        }
      ],
      "name": "setShouldToggleIsLeverageEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_taxBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stableTaxBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_mintBurnFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_swapFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stableSwapFeeBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setSwapFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_referralStorage",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tierId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalRebate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_discountShare",
          "type": "uint256"
        }
      ],
      "name": "setTier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenWeight",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minProfitBps",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxUsdmAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_bufferAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_usdmAmount",
          "type": "uint256"
        }
      ],
      "name": "setTokenConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_usdmAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "setUsdmAmounts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "contract IVaultUtils",
          "name": "_vaultUtils",
          "type": "address"
        }
      ],
      "name": "setVaultUtils",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shouldToggleIsLeverageEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "signalApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "signalMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "signalRedeemUsdm",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        }
      ],
      "name": "signalSetGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_handler",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "signalSetHandler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "signalSetPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenDecimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenWeight",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minProfitBps",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxUsdmAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isStable",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_isShortable",
          "type": "bool"
        }
      ],
      "name": "signalVaultSetTokenConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "signalWithdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferIn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "usdmAmount",
          "type": "uint256"
        }
      ],
      "name": "updateUsdmSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenDecimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenWeight",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minProfitBps",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxUsdmAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isStable",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_isShortable",
          "type": "bool"
        }
      ],
      "name": "vaultSetTokenConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "withdrawFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x129cf70b4f62323a03f886358d09c95bbf28ec98849457314501b6074e2d7f24",
  "receipt": {
    "to": null,
    "from": "0x9B6B26Db5F9149F0e3f4DAF2Eb98307020236dDB",
    "contractAddress": "0x98737Cd5B3E56F36f48CA50dbd3C722BD4fA3433",
    "transactionIndex": 1,
    "gasUsed": "5211752",
    "logsBloom": "0x
    "blockHash": "0x4df16074702a55d66c88c78ee6e5eb216e550dca67fbb6cdc1e4d4f5f7ee576e",
    "transactionHash": "0x129cf70b4f62323a03f886358d09c95bbf28ec98849457314501b6074e2d7f24",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 33420391,
        "transactionHash": "0x129cf70b4f62323a03f886358d09c95bbf28ec98849457314501b6074e2d7f24",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000009b6b26db5f9149f0e3f4daf2eb98307020236ddb",
          "0x0000000000000000000000003a22c8bc68e98b0faf40f349dd2b2890fae01484"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000021541c08d7e3380000000000000000000000000000000000000000000000008bb4d978bb61ab750000000000000000000000000000000000000000000004561b77c1d7ce03e0ad0000000000000000000000000000000000000000000000008b93855cb289c83d0000000000000000000000000000000000000000000004561b9915f3d6dbc3e5",
        "logIndex": 6,
        "blockHash": "0x4df16074702a55d66c88c78ee6e5eb216e550dca67fbb6cdc1e4d4f5f7ee576e"
      }
    ],
    "blockNumber": 33420391,
    "cumulativeGasUsed": "5315082",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9B6B26Db5F9149F0e3f4DAF2Eb98307020236dDB",
    432000,
    "0x0000000000000000000000000000000000000000",
    "0x9B6B26Db5F9149F0e3f4DAF2Eb98307020236dDB",
    "0x9B6B26Db5F9149F0e3f4DAF2Eb98307020236dDB",
    "1000000000000000000000",
    10,
    500
  ],
  "numDeployments": 1,
  "solcInputHash": "59bf562207d3b98a68d8cbf2ed09b4a8",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_buffer\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mintReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mlpManager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxTokenSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_marginFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarginFeeBasisPoints\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MAX_BUFFER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FUNDING_RATE_FACTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_LEVERAGE_VALIDATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vester\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchSetBonusRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"batchWithdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_action\",\"type\":\"bytes32\"}],\"name\":\"cancelAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"disableLeverage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"enableLeverage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_referralStorage\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_code\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_newAccount\",\"type\":\"address\"}],\"name\":\"govSetCodeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isHandler\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isKeeper\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marginFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMarginFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mlpManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"pendingActions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"processMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"redeemUsdm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_buffer\",\"type\":\"uint256\"}],\"name\":\"setBuffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_handler\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setContractHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setExternalAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_taxBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stableTaxBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mintBurnFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_swapFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stableSwapFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_marginFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidationFeeUsd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minProfitTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_hasDynamicFees\",\"type\":\"bool\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fundingInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fundingRateFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stableFundingRateFactor\",\"type\":\"uint256\"}],\"name\":\"setFundingRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_handler\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_inPrivateLiquidationMode\",\"type\":\"bool\"}],\"name\":\"setInPrivateLiquidationMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_inPrivateTransferMode\",\"type\":\"bool\"}],\"name\":\"setInPrivateTransferMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLeverageEnabled\",\"type\":\"bool\"}],\"name\":\"setIsLeverageEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isSwapEnabled\",\"type\":\"bool\"}],\"name\":\"setIsSwapEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keeper\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setKeeper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_liquidator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setLiquidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_marginFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarginFeeBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setMarginFeeBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxGasPrice\",\"type\":\"uint256\"}],\"name\":\"setMaxGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setMaxGlobalShortSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxLeverage\",\"type\":\"uint256\"}],\"name\":\"setMaxLeverage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"name\":\"setPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_referralStorage\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tierId\",\"type\":\"uint256\"}],\"name\":\"setReferrerTier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_shouldToggleIsLeverageEnabled\",\"type\":\"bool\"}],\"name\":\"setShouldToggleIsLeverageEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_taxBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stableTaxBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mintBurnFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_swapFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stableSwapFeeBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setSwapFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_referralStorage\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tierId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalRebate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_discountShare\",\"type\":\"uint256\"}],\"name\":\"setTier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minProfitBps\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxUsdmAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bufferAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_usdmAmount\",\"type\":\"uint256\"}],\"name\":\"setTokenConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_usdmAmounts\",\"type\":\"uint256[]\"}],\"name\":\"setUsdmAmounts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"contract IVaultUtils\",\"name\":\"_vaultUtils\",\"type\":\"address\"}],\"name\":\"setVaultUtils\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldToggleIsLeverageEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"signalApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"signalMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"signalRedeemUsdm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"}],\"name\":\"signalSetGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_handler\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"signalSetHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"name\":\"signalSetPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenDecimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minProfitBps\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxUsdmAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isStable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_isShortable\",\"type\":\"bool\"}],\"name\":\"signalVaultSetTokenConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"signalWithdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferIn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdmAmount\",\"type\":\"uint256\"}],\"name\":\"updateUsdmSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenDecimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minProfitBps\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxUsdmAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isStable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_isShortable\",\"type\":\"bool\"}],\"name\":\"vaultSetTokenConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/peripherals/Timelock.sol\":\"Timelock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/access/interfaces/IAdmin.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IAdmin {\\n    function setAdmin(address _admin) external;\\n}\\n\",\"keccak256\":\"0xfddbb2ce15a84be5f1fc37c68ff691fbf3ef0dfbd898492fea2d85d05313c5c7\",\"license\":\"MIT\"},\"contracts/core/interfaces/IMlpManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\ninterface IMlpManager {\\n    function usdm() external view returns (address);\\n    function cooldownDuration() external returns (uint256);\\n    function getAumInUsdm(bool maximise) external view returns (uint256);\\n    function lastAddedAt(address _account) external returns (uint256);\\n    function addLiquidity(address _token, uint256 _amount, uint256 _minUsdm, uint256 _minMlp) external returns (uint256);\\n    function addLiquidityForAccount(address _fundingAccount, address _account, address _token, uint256 _amount, uint256 _minUsdm, uint256 _minMlp) external returns (uint256);\\n    function removeLiquidity(address _tokenOut, uint256 _mlpAmount, uint256 _minOut, address _receiver) external returns (uint256);\\n    function removeLiquidityForAccount(address _account, address _tokenOut, uint256 _mlpAmount, uint256 _minOut, address _receiver) external returns (uint256);\\n}\\n\",\"keccak256\":\"0xff9955ced22c958d3daedf78bbd2b7ba52ae63d83558e0c978cd9dbcbb31ce6b\",\"license\":\"MIT\"},\"contracts/core/interfaces/IVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\nimport \\\"./IVaultUtils.sol\\\";\\ninterface IVault {\\n    function withdrawFees(address _token, address _receiver) external returns (uint256);\\n    function directPoolDeposit(address _token) external;\\n    function buyUSDM(address _token, address _receiver) external returns (uint256);\\n    function sellUSDM(address _token, address _receiver) external returns (uint256);\\n    function swap(address _tokenIn, address _tokenOut, address _receiver) external returns (uint256);\\n    function increasePosition(address _account, address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong) external;\\n    function decreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver) external returns (uint256);\\n    function validateLiquidation(address _account, address _collateralToken, address _indexToken, bool _isLong, bool _raise) external view returns (uint256, uint256);\\n    function liquidatePosition(address _account, address _collateralToken, address _indexToken, bool _isLong, address _feeReceiver) external;\\n\\n    function tokenToUsdMin(address _token, uint256 _tokenAmount) external view returns (uint256);\\n    function priceFeed() external view returns (address);\\n    function fundingRateFactor() external view returns (uint256);\\n    function stableFundingRateFactor() external view returns (uint256);\\n    function cumulativeFundingRates(address _token) external view returns (uint256);\\n    function getNextFundingRate(address _token) external view returns (uint256);\\n    function getFeeBasisPoints(address _token, uint256 _usdmDelta, uint256 _feeBasisPoints, uint256 _taxBasisPoints, bool _increment) external view returns (uint256);\\n    function liquidationFeeUsd() external view returns (uint256);\\n    function taxBasisPoints() external view returns (uint256);\\n    function stableTaxBasisPoints() external view returns (uint256);\\n    function mintBurnFeeBasisPoints() external view returns (uint256);\\n    function swapFeeBasisPoints() external view returns (uint256);\\n    function stableSwapFeeBasisPoints() external view returns (uint256);\\n    function marginFeeBasisPoints() external view returns (uint256);\\n    function allWhitelistedTokensLength() external view returns (uint256);\\n    function allWhitelistedTokens(uint256) external view returns (address);\\n    function whitelistedTokens(address _token) external view returns (bool);\\n    function stableTokens(address _token) external view returns (bool);\\n    function shortableTokens(address _token) external view returns (bool);\\n    function feeReserves(address _token) external view returns (uint256);\\n    function globalShortSizes(address _token) external view returns (uint256);\\n    function globalShortAveragePrices(address _token) external view returns (uint256);\\n    function maxGlobalShortSizes(address _token) external view returns (uint256);\\n    function tokenDecimals(address _token) external view returns (uint256);\\n    function tokenWeights(address _token) external view returns (uint256);\\n    function guaranteedUsd(address _token) external view returns (uint256);\\n    function poolAmounts(address _token) external view returns (uint256);\\n    function bufferAmounts(address _token) external view returns (uint256);\\n    function reservedAmounts(address _token) external view returns (uint256);\\n    function usdmAmounts(address _token) external view returns (uint256);\\n    function maxUsdmAmounts(address _token) external view returns (uint256);\\n    function getRedemptionAmount(address _token, uint256 _usdmAmount) external view returns (uint256);\\n    function getMaxPrice(address _token) external view returns (uint256);\\n    function getMinPrice(address _token) external view returns (uint256);\\n    function getDelta(address _indexToken, uint256 _size, uint256 _averagePrice, bool _isLong, uint256 _lastIncreasedTime) external view returns (bool, uint256);\\n    function getPosition(address _account, address _collateralToken, address _indexToken, bool _isLong) external view returns (uint256, uint256, uint256, uint256, uint256, uint256, bool, uint256);\\n    function isInitialized() external view returns (bool);\\n    function isSwapEnabled() external view returns (bool);\\n    function isLeverageEnabled() external view returns (bool);\\n    function router() external view returns (address);\\n    function usdm() external view returns (address);\\n    function gov() external view returns (address);\\n    function whitelistedTokenCount() external view returns (uint256);\\n    function maxLeverage() external view returns (uint256);\\n    function minProfitTime() external view returns (uint256);\\n    function hasDynamicFees() external view returns (bool);\\n    function fundingInterval() external view returns (uint256);\\n    function totalTokenWeights() external view returns (uint256);\\n    function getTargetUsdmAmount(address _token) external view returns (uint256);\\n    function inManagerMode() external view returns (bool);\\n    function inPrivateLiquidationMode() external view returns (bool);\\n    function maxGasPrice() external view returns (uint256);\\n    function approvedRouters(address _account, address _router) external view returns (bool);\\n    function isLiquidator(address _account) external view returns (bool);\\n    function isManager(address _account) external view returns (bool);\\n    function minProfitBasisPoints(address _token) external view returns (uint256);\\n    function tokenBalances(address _token) external view returns (uint256);\\n    function lastFundingTimes(address _token) external view returns (uint256);\\n\\n    function setMaxLeverage(uint256 _maxLeverage) external;\\n    function setInManagerMode(bool _inManagerMode) external;\\n    function setManager(address _manager, bool _isManager) external;\\n    function setIsSwapEnabled(bool _isSwapEnabled) external;\\n    function setIsLeverageEnabled(bool _isLeverageEnabled) external;\\n    function setMaxGasPrice(uint256 _maxGasPrice) external;\\n    function setUsdmAmount(address _token, uint256 _amount) external;\\n    function setBufferAmount(address _token, uint256 _amount) external;\\n    function setMaxGlobalShortSize(address _token, uint256 _amount) external;\\n    function setInPrivateLiquidationMode(bool _inPrivateLiquidationMode) external;\\n    function setLiquidator(address _liquidator, bool _isActive) external;\\n    function setFundingRate(uint256 _fundingInterval, uint256 _fundingRateFactor, uint256 _stableFundingRateFactor) external;\\n    function setFees(uint256 _taxBasisPoints, uint256 _stableTaxBasisPoints, uint256 _mintBurnFeeBasisPoints, uint256 _swapFeeBasisPoints, uint256 _stableSwapFeeBasisPoints, uint256 _marginFeeBasisPoints, uint256 _liquidationFeeUsd, uint256 _minProfitTime, bool _hasDynamicFees) external;\\n    function setTokenConfig(address _token, uint256 _tokenDecimals, uint256 _redemptionBps, uint256 _minProfitBps, uint256 _maxUsdmAmount, bool _isStable, bool _isShortable) external;\\n    function setPriceFeed(address _priceFeed) external;\\n    function setVaultUtils(IVaultUtils _vaultUtils) external;\\n    function setError(uint256 _errorCode, string calldata _error) external;\\n}\\n\",\"keccak256\":\"0x6865fea6348cbcd8eb8c91bbf6fe38d9c7128778ed80b97e6a407f55bf0fbe81\",\"license\":\"MIT\"},\"contracts/core/interfaces/IVaultUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\ninterface IVaultUtils {\\n    function updateCumulativeFundingRate(address _collateralToken, address _indexToken) external returns (bool);\\n    function validateIncreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _sizeDelta, bool _isLong) external view;\\n    function validateDecreasePosition(address _account, address _collateralToken, address _indexToken, uint256 _collateralDelta, uint256 _sizeDelta, bool _isLong, address _receiver) external view;\\n    function validateLiquidation(address _account, address _collateralToken, address _indexToken, bool _isLong, bool _raise) external view returns (uint256, uint256);\\n    function getEntryFundingRate(address _collateralToken, address _indexToken, bool _isLong) external view returns (uint256);\\n    function getPositionFee(address _account, address _collateralToken, address _indexToken, bool _isLong, uint256 _sizeDelta) external view returns (uint256);\\n    function getFundingFee(address _account, address _collateralToken, address _indexToken, bool _isLong, uint256 _size, uint256 _entryFundingRate) external view returns (uint256);\\n    function getBuyUsdmFeeBasisPoints(address _token, uint256 _usdmAmount) external view returns (uint256);\\n    function getSellUsdmFeeBasisPoints(address _token, uint256 _usdmAmount) external view returns (uint256);\\n    function getSwapFeeBasisPoints(address _tokenIn, address _tokenOut, uint256 _usdmAmount) external view returns (uint256);\\n    function getFeeBasisPoints(address _token, uint256 _usdmDelta, uint256 _feeBasisPoints, uint256 _taxBasisPoints, bool _increment) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x938c049c684992effbeeb9aa3b069331224e0cfdf95e97d4aaf3d8fbd99b51b8\",\"license\":\"MIT\"},\"contracts/core/storage/TimelockStorage.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.6.0;\\nimport \\\"../../peripherals/interfaces/ITimelockTarget.sol\\\";\\nimport \\\"../../peripherals/interfaces/ITimelock.sol\\\";\\nimport \\\"../../peripherals/interfaces/IHandlerTarget.sol\\\";\\n\\nimport \\\"../../access/interfaces/IAdmin.sol\\\";\\nimport \\\"../../core/interfaces/IVault.sol\\\";\\nimport \\\"../../core/interfaces/IVaultUtils.sol\\\";\\nimport \\\"../../core/interfaces/IMlpManager.sol\\\";\\nimport \\\"../../referrals/interfaces/IReferralStorage.sol\\\";\\nimport \\\"../../tokens/interfaces/IYieldToken.sol\\\";\\nimport \\\"../../tokens/interfaces/IBaseToken.sol\\\";\\nimport \\\"../../tokens/interfaces/IMintable.sol\\\";\\nimport \\\"../../tokens/interfaces/IUSDM.sol\\\";\\nimport \\\"../../staking/interfaces/IVester.sol\\\";\\nimport \\\"../../libraries/token/IERC20.sol\\\";\\n\\nimport \\\"../../libraries/math/SafeMath.sol\\\";\\nimport \\\"../../libraries/Events.sol\\\";\\nimport \\\"../../libraries/Errors.sol\\\";\\nabstract contract TimelockStorage is ITimelock {\\n    uint256 public constant PRICE_PRECISION = 10 ** 30;\\n    uint256 public constant MAX_BUFFER = 5 days;\\n    uint256 public constant MAX_FUNDING_RATE_FACTOR = 200; // 0.02%\\n    uint256 public constant MAX_LEVERAGE_VALIDATION = 500000; // 50x\\n    uint256 public buffer;\\n    uint256 public maxTokenSupply;\\n    uint256 public marginFeeBasisPoints;\\n    uint256 public maxMarginFeeBasisPoints;\\n    bool public shouldToggleIsLeverageEnabled;\\n    address public admin;\\n    address public tokenManager;\\n    address public mintReceiver;\\n    address public mlpManager;\\n    mapping (bytes32 => uint256) public pendingActions;\\n    mapping (address => bool) public isHandler;\\n    mapping (address => bool) public isKeeper;\\n\\n    using SafeMath for uint256;\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"Timelock: forbidden\\\");\\n        _;\\n    }\\n    modifier onlyHandlerAndAbove() {\\n        require(msg.sender == admin || isHandler[msg.sender], \\\"Timelock: forbidden\\\");\\n        _;\\n    }\\n    modifier onlyKeeperAndAbove() {\\n        require(msg.sender == admin || isHandler[msg.sender] || isKeeper[msg.sender], \\\"Timelock: forbidden\\\");\\n        _;\\n    }\\n    modifier onlyTokenManager() {\\n        require(msg.sender == tokenManager, \\\"Timelock: forbidden\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x82c3119d029431f95a0541145905cc426b06230ec1fe263e127a4d148c47a365\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\nlibrary Errors {\\n    /* Timelock Error Message*/\\n    string public constant Timelock_Invalid_Target = \\\"Timelock: invalid _target\\\";\\n    string public constant Timelock_Invalid_Buffer = \\\"Timelock: invalid _buffer\\\";\\n    string public constant Timelock_Buffer_Cannot_Be_Decreased = \\\"Timelock: buffer cannot be decreased\\\";\\n    string public constant Timelock_invalid_maxLeverage = \\\"Timelock: invalid _maxLeverage\\\";\\n    string public constant Timelock_invalid_fundingRateFactor = \\\"Timelock: invalid _fundingRateFactor\\\";\\n    string public constant Timelock_invalid_stableFundingRateFactor = \\\"Timelock: invalid _stableFundingRateFactor\\\";\\n    string public constant Timelock_invalid_minProfitBps = \\\"Timelock: invalid _minProfitBps\\\";\\n    string public constant Timelock_token_not_yet_whitelisted = \\\"Timelock: token not yet whitelisted\\\";\\n    string public constant TIMELOCK_INVALID_MAXGASPRICE = \\\"Invalid _maxGasPrice\\\";\\n    string public constant TIMELOCK_INVALID_LENGTHS = \\\"Timelock: invalid lengths\\\";\\n    string public constant TIMELOCK_MAXTOKENSUPPLY_EXCEEDED = \\\"Timelock: maxTokenSupply exceeded\\\";\\n    string public constant TIMELOCK_ACTION_ALREADY_SIGNALLED = \\\"Timelock: action already signalled\\\";\\n    string public constant TIMELOCK_ACTION_NOT_SIGNALLED = \\\"Timelock: action not signalled\\\";\\n    string public constant TIMELOCK_ACTION_TIME_NOT_YET_PASSED = \\\"Timelock: action time not yet passed\\\";\\n    string public constant TIMELOCK_INVALID_ACTION = \\\"Timelock: invalid _action\\\";\\n    string public constant TIMELOCK_INVALID_BUFFER = \\\"Timelock: invalid _buffer\\\";\\n\\n    /* PriceFeed Error Message*/\\n    string public constant PriceFeed_forbidden = \\\"PriceFeed: forbidden\\\";\\n\\n    /* USDM.sol*/\\n    string public constant USDM_FORBIDDEN = \\\"USDM: forbidden\\\";\\n\\n    /* BasePositionManagers.sol */\\n    string public constant BASEPOSITIONMANAGER_MARK_PRICE_LOWER_THAN_LIMIT      = \\\"BasePositionManager: mark price lower than limit\\\";\\n    string public constant BASEPOSITIONMANAGER_MARK_PRICE_HIGHER_THAN_LIMIT     = \\\"BasePositionManager: mark price higher than limit\\\";\\n    string public constant BASEPOSITIONMANAGER_INVALID_PATH_LENGTH              = \\\"BasePositionManager: invalid _path.length\\\";\\n    string public constant BASEPOSITIONMANAGER_INSUFFICIENT_AMOUNTOUT           = \\\"BasePositionManager: insufficient amountOut\\\";\\n    string public constant BASEPOSITIONMANAGER_MAX_GLOBAL_LONGS_EXCEEDED        = \\\"BasePositionManager: max global longs exceeded\\\";\\n    string public constant BASEPOSITIONMANAGER_MAX_GLOBAL_SHORTS_EXCEEDED       = \\\"BasePositionManager: max global shorts exceeded\\\";\\n    string public constant BASEPOSITIONMANAGER_INVALID_SENDER                   = \\\"BasePositionManager: invalid sender\\\";\\n\\n    /* PositionManager.sol */\\n    string public constant POSITIONMANAGER_INVALID_PATH_LENGTH                  = \\\"PositionManager: invalid _path.length\\\";\\n    string public constant POSITIONMANAGER_INVALID_PATH                         = \\\"PositionManager: invalid _path\\\";\\n    string public constant POSITIONMANAGER_LONG_DEPOSIT                         = \\\"PositionManager: long deposit\\\";\\n    string public constant POSITIONMANAGER_LONG_LEVERAGE_DECREASE               = \\\"PositionManager: long leverage decrease\\\";\\n    string public constant POSITIONMANAGER_FORBIDDEN                            = \\\"PositionManager: forbidden\\\";\\n\\n    /* Router.sol*/\\n    string public constant ROUTER_FORBIDDEN                                     = \\\"Router: forbidden\\\";\\n\\n    /* MlpManager.sol */\\n    string public constant MLPMANAGER_ACTION_NOT_ENABLED                        = \\\"MlpManager: action not enabled\\\";\\n    string public constant MLPMANAGER_INVALID_WEIGHT                            = \\\"MlpManager: invalid weight\\\";\\n    string public constant MLPMANAGER_INVALID_COOLDOWNDURATION                  = \\\"MlpManager: invalid _cooldownDuration\\\";\\n    string public constant MLPMANAGER_INVALID_AMOUNT                            = \\\"MlpManager: invalid _amount\\\";\\n    string public constant MLPMANAGER_INSUFFICIENT_USDM_OUTPUT                  = \\\"MlpManager: insufficient USDM output\\\";\\n    string public constant MLPMANAGER_INSUFFICIENT_MLP_OUTPUT                   = \\\"MlpManager: insufficient MLP output\\\";\\n    string public constant MLPMANAGER_INVALID_MLPAMOUNT                         = \\\"MlpManager: invalid _mlpAmount\\\";\\n    string public constant MLPMANAGER_COOLDOWN_DURATION_NOT_YET_PASSED          = \\\"MlpManager: cooldown duration not yet passed\\\";\\n    string public constant MLPMANAGER_INSUFFICIENT_OUTPUT                       = \\\"MlpManager: insufficient output\\\";\\n    string public constant MLPMANAGER_FORBIDDEN                                 = \\\"MlpManager: forbidden\\\";\\n\\n    /* ShortsTrack.sol*/\\n    string public constant SHORTSTRACKER_FORBIDDEN                              = \\\"ShortsTracker: forbidden\\\";\\n    string public constant SHORTSTRACKER_INVALID_HANDLER                        = \\\"ShortsTracker: invalid _handler\\\";\\n    string public constant SHORTSTRACKER_ALREADY_MIGRATED                       = \\\"ShortsTracker: already migrated\\\";\\n    string public constant SHORTSTRACKER_OVERFLOW                               = \\\"ShortsTracker: overflow\\\";\\n\\n    /* VaultUtils.sol*/\\n    string public constant VAULT_LOSSES_EXCEED_COLLATERAL                       = \\\"Vault: losses exceed collateral\\\";\\n    string public constant VAULT_FEES_EXCEED_COLLATERAL                         = \\\"Vault: fees exceed collateral\\\";\\n    string public constant VAULT_LIQUIDATION_FEES_EXCEED_COLLATERAL             = \\\"Vault: liquidation fees exceed collateral\\\";\\n    string public constant VAULT_MAXLEVERAGE_EXCEEDED                           = \\\"Vault: maxLeverage exceeded\\\";\\n\\n    /* VaultPriceFeed.sol*/\\n    string public constant VAULTPRICEFEED_FORBIDDEN                             = \\\"VaultPriceFeed: forbidden\\\";\\n    string public constant VAULTPRICEFEED_ADJUSTMENT_FREQUENCY_EXCEEDED         = \\\"VaultPriceFeed: adjustment frequency exceeded\\\";\\n    string public constant VAULTPRICEFEED_INVALID_ADJUSTMENTBPS                 = \\\"Vaultpricefeed: invalid _adjustmentBps\\\";\\n    string public constant VAULTPRICEFEED_INVALID_SPREADBASISPOINTS             = \\\"VaultPriceFeed: invalid _spreadBasisPoints\\\";\\n    string public constant VAULTPRICEFEED_INVALID_PRICESAMPLESPACE              = \\\"VaultPriceFeed: invalid _priceSampleSpace\\\";\\n    string internal constant VAULTPRICEFEED_INVALID_PRICE_FEED                  = \\\"VaultPriceFeed: invalid price feed\\\";\\n    string internal constant VAULTPRICEFEED_INVALID_PRICE                       = \\\"VaultPriceFeed: invalid price\\\";\\n    string internal constant CHAINLINK_FEEDS_ARE_NOT_BEING_UPDATED              = \\\"Chainlink feeds are not being updated\\\";\\n    string internal constant VAULTPRICEFEED_COULD_NOT_FETCH_PRICE               = \\\"VaultPriceFeed: could not fetch price\\\";\\n\\n    /* VaultInternal.sol*/\\n    string internal constant VAULT_POOLAMOUNT_EXCEEDED                          = \\\"Vault: poolAmount exceeded\\\";\\n    string internal constant VAULT_INSUFFICIENT_RESERVE                         = \\\"Vault: insufficient reserve\\\";\\n    string internal constant VAULT_MAX_SHORTS_EXCEEDED                          = \\\"Vault: max shorts exceeded\\\";\\n    string internal constant VAULT_POOLAMOUNT_BUFFER                            = \\\"Vault: poolAmount < buffer\\\";\\n    string internal constant VAULT_INVALID_ERRORCONTROLLER                      = \\\"Vault: invalid errorController\\\";\\n\\n    /* Router.sol */\\n    string internal constant ROUTER_INVALID_SENDER                              = \\\"Router: invalid sender\\\";\\n    string internal constant ROUTER_INVALID_PATH                                = \\\"Router: invalid _path\\\";\\n    string internal constant ROUTER_MARK_PRICE_HIGHER_THAN_LIMIT                = \\\"Router: mark price higher than limit\\\";\\n    string internal constant ROUTER_MARK_PRICE_LOWER_THAN_LIMIT                 = \\\"Router: mark price lower than limit\\\";\\n    string internal constant ROUTER_INVALID_PATH_LENGTH                         = \\\"Router: invalid _path.length\\\";\\n    string internal constant ROUTER_INSUFFICIENT_AMOUNTOUT                      = \\\"Router: insufficient amountOut\\\";\\n    string internal constant ROUTER_INVALID_PLUGIN                              = \\\"Router: invalid plugin\\\";\\n    string internal constant ROUTER_PLUGIN_NOT_APPROVED                         = \\\"Router: plugin not approved\\\";\\n\\n    /* OrderBook.sol*/\\n    string internal constant ORDERBOOK_FORBIDDEN                                = \\\"OrderBook: forbidden\\\";\\n    string internal constant ORDERBOOK_ALREADY_INITIALIZED                      = \\\"OrderBook: already initialized\\\";\\n    string internal constant ORDERBOOK_INVALID_SENDER                           = \\\"OrderBook: invalid sender\\\";\\n    string internal constant ORDERBOOK_INVALID_PATH_LENGTH                      = \\\"OrderBook: invalid _path.length\\\";\\n    string internal constant ORDERBOOK_INVALID_PATH                             = \\\"OrderBook: invalid _path\\\";\\n    string internal constant ORDERBOOK_INVALID_AMOUNTIN                         = \\\"OrderBook: invalid _amountIn\\\";\\n    string internal constant ORDERBOOK_INSUFFICIENT_EXECUTION_FEE               = \\\"OrderBook: insufficient execution fee\\\";\\n    string internal constant ORDERBOOK_ONLY_WETH_COULD_BE_WRAPPED               = \\\"OrderBook: only weth could be wrapped\\\";\\n    string internal constant ORDERBOOK_INCORRECT_VALUE_TRANSFERRED              = \\\"OrderBook: incorrect value transferred\\\";\\n    string internal constant ORDERBOOK_INCORRECT_EXECUTION_FEE_TRANSFERRED      = \\\"OrderBook: incorrect execution fee transferred\\\";\\n    string internal constant ORDERBOOK_NON_EXISTENT_ORDER                       = \\\"OrderBook: non-existent order\\\";\\n    string internal constant ORDERBOOK_INVALID_PRICE_FOR_EXECUTION              = \\\"OrderBook: invalid price for execution\\\";\\n    string internal constant ORDERBOOK_INSUFFICIENT_COLLATERAL                  = \\\"OrderBook: insufficient collateral\\\";\\n    string internal constant ORDERBOOK_INSUFFICIENT_AMOUNTOUT                   = \\\"OrderBook: insufficient amountOut\\\";\\n\\n    /* RewardRouterV2.sol */\\n    string internal constant REWARDROUTER_INVALID_AMOUNT                        = \\\"RewardRouter: invalid _amount\\\";\\n    string internal constant REWARDROUTER_INVALID_MSG_VALUE                     = \\\"RewardRouter: invalid msg.value\\\";\\n    string internal constant REWARDROUTER_ALREADY_INITIALIZED                   = \\\"RewardRouter: already initialized\\\";\\n    string internal constant REWARDROUTER_INVALID_MLPAMOUNT                     = \\\"RewardRouter: invalid _mlpAmount\\\";\\n    string internal constant REWARDROUTER_SENDER_HAS_VESTED_TOKENS              = \\\"RewardRouter: sender has vested tokens\\\";\\n    string internal constant REWARDROUTER_TRANSFER_NOT_SIGNALLED                = \\\"RewardRouter: transfer not signalled\\\";\\n    string internal constant REWARDROUTER_STAKEDMOLDTRACKER_AVERAGESTAKEDAMOUNTS_GREATER_0                      = \\\"RewardRouter: stakedMoldTracker.averageStakedAmounts > 0\\\";\\n    string internal constant REWARDROUTER_STAKEDMOLDTRACKER_CUMULATIVEREWARDS_GREATER_0                         = \\\"RewardRouter: stakedMoldTracker.cumulativeRewards > 0\\\";\\n    string internal constant REWARDROUTER_BONUSMOLDTRACKER_AVERAGESTAKEDAMOUNTS_GREATER_0                       = \\\"RewardRouter: bonusMoldTracker.averageStakedAmounts > 0\\\";\\n    string internal constant REWARDROUTER_BONUSMOLDTRACKER_CUMULATIVEREWARDS_GREATER_0                          = \\\"RewardRouter: bonusMoldTracker.cumulativeRewards > 0\\\";\\n    string internal constant REWARDROUTER_FEEMOLDTRACKER_AVERAGESTAKEDAMOUNTS_GREATER_0                         = \\\"RewardRouter: feeMoldTracker.averageStakedAmounts > 0\\\";\\n    string internal constant REWARDROUTER_FEEMOLDTRACKER_CUMULATIVEREWARDS_GREATER_0                            = \\\"RewardRouter: feeMoldTracker.cumulativeRewards > 0\\\";\\n    string internal constant REWARDROUTER_MOLDVESTER_TRANSFERREDAVERAGESTAKEDAMOUNTS_GREATER_0                  = \\\"RewardRouter: MoldVester.transferredAverageStakedAmounts > 0\\\";\\n    string internal constant REWARDROUTER_MOLDVESTER_TRANSFERREDCUMULATIVEREWARDS_GREATER_0                     = \\\"RewardRouter: MoldVester.transferredCumulativeRewards > 0\\\";\\n    string internal constant REWARDROUTER_STAKEDMLPTRACKER_AVERAGESTAKEDAMOUNTS_GREATER_0                       = \\\"RewardRouter: stakedMlpTracker.averageStakedAmounts > 0\\\";\\n    string internal constant REWARDROUTER_STAKEDMLPTRACKER_CUMULATIVEREWARDS_GREATER_0                          = \\\"RewardRouter: stakedMlpTracker.cumulativeRewards > 0\\\";\\n    string internal constant REWARDROUTER_FEEMLPTRACKER_AVERAGESTAKEDAMOUNTS_GREATER_0                          = \\\"RewardRouter: feeMlpTracker.averageStakedAmounts > 0\\\";\\n    string internal constant REWARDROUTER_FEEMLPTRACKER_CUMULATIVEREWARDS_GREATER_0                             = \\\"RewardRouter: feeMlpTracker.cumulativeRewards > 0\\\";\\n    string internal constant REWARDROUTER_MOLDVESTER_BALANCE_GREATER_0          = \\\"RewardRouter: MoldVester.balance > 0\\\";\\n    string internal constant REWARDROUTER_MLPVESTER_BALANCE_GREATER_0           = \\\"RewardRouter: MlpVester.balance > 0\\\";\\n\\n}\\n\",\"keccak256\":\"0x2d6c5a1032ea8a6b12bcb7fde4f03a3519d67086d21a2a9bf4ea541db73bdbc5\",\"license\":\"MIT\"},\"contracts/libraries/Events.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\nlibrary Events {\\n    /* BasePositionManager Events */\\n    event SetDepositFee(uint256 depositFee);\\n    event SetIncreasePositionBufferBps(uint256 increasePositionBufferBps);\\n    event SetReferralStorage(address referralStorage);\\n    event SetAdmin(address admin);\\n    event WithdrawFees(address token, address receiver, uint256 amount);\\n    event SetMaxGlobalSizes(address[] tokens, uint256[] longSizes, uint256[] shortSizes);\\n    event IncreasePositionReferral(address account, uint256 sizeDelta, uint256 marginFeeBasisPoints, bytes32 referralCode, address referrer);\\n    event DecreasePositionReferral(address account, uint256 sizeDelta, uint256 marginFeeBasisPoints, bytes32 referralCode, address referrer);\\n\\n    /*Position Manager Events*/\\n    event SetOrderKeeper(address indexed account, bool isActive);\\n    event SetLiquidator(address indexed account, bool isActive);\\n    event SetPartner(address account, bool isActive);\\n    event SetOpened(bool opened);\\n    event SetShouldValidateIncreaseOrder(bool shouldValidateIncreaseOrder);\\n\\n\\n    /* Orderbook.sol events */\\n    event CreateIncreaseOrder(address indexed account, uint256 orderIndex, address purchaseToken, uint256 purchaseTokenAmount, address collateralToken, address indexToken, uint256 sizeDelta, bool isLong, uint256 triggerPrice, bool triggerAboveThreshold, uint256 executionFee);\\n    event CancelIncreaseOrder(address indexed account, uint256 orderIndex, address purchaseToken, uint256 purchaseTokenAmount, address collateralToken, address indexToken, uint256 sizeDelta, bool isLong, uint256 triggerPrice, bool triggerAboveThreshold, uint256 executionFee);\\n    event ExecuteIncreaseOrder(address indexed account, uint256 orderIndex, address purchaseToken, uint256 purchaseTokenAmount, address collateralToken, address indexToken, uint256 sizeDelta, bool isLong, uint256 triggerPrice, bool triggerAboveThreshold, uint256 executionFee, uint256 executionPrice);\\n    event UpdateIncreaseOrder(address indexed account, uint256 orderIndex, address collateralToken, address indexToken, bool isLong, uint256 sizeDelta, uint256 triggerPrice, bool triggerAboveThreshold);\\n    event CreateDecreaseOrder(address indexed account, uint256 orderIndex, address collateralToken, uint256 collateralDelta, address indexToken, uint256 sizeDelta, bool isLong, uint256 triggerPrice, bool triggerAboveThreshold, uint256 executionFee);\\n    event CancelDecreaseOrder(address indexed account, uint256 orderIndex, address collateralToken, uint256 collateralDelta, address indexToken, uint256 sizeDelta, bool isLong, uint256 triggerPrice, bool triggerAboveThreshold, uint256 executionFee);\\n    event ExecuteDecreaseOrder(address indexed account, uint256 orderIndex, address collateralToken, uint256 collateralDelta, address indexToken, uint256 sizeDelta, bool isLong, uint256 triggerPrice, bool triggerAboveThreshold, uint256 executionFee, uint256 executionPrice);\\n    event UpdateDecreaseOrder(address indexed account, uint256 orderIndex, address collateralToken, uint256 collateralDelta, address indexToken, uint256 sizeDelta, bool isLong, uint256 triggerPrice, bool triggerAboveThreshold);\\n    event CreateSwapOrder(address indexed account, uint256 orderIndex, address[] path, uint256 amountIn, uint256 minOut, uint256 triggerRatio, bool triggerAboveThreshold, bool shouldUnwrap, uint256 executionFee);\\n    event CancelSwapOrder(address indexed account, uint256 orderIndex, address[] path, uint256 amountIn, uint256 minOut, uint256 triggerRatio, bool triggerAboveThreshold, bool shouldUnwrap, uint256 executionFee);\\n    event UpdateSwapOrder(address indexed account, uint256 ordexIndex, address[] path, uint256 amountIn, uint256 minOut, uint256 triggerRatio, bool triggerAboveThreshold, bool shouldUnwrap, uint256 executionFee);\\n    event ExecuteSwapOrder(address indexed account, uint256 orderIndex, address[] path, uint256 amountIn, uint256 minOut, uint256 amountOut, uint256 triggerRatio, bool triggerAboveThreshold, bool shouldUnwrap, uint256 executionFee);\\n    event Initialize(address router, address vault, address weth, address usdm, uint256 minExecutionFee, uint256 minPurchaseTokenAmountUsd);\\n    event UpdateMinExecutionFee(uint256 minExecutionFee);\\n    event UpdateMinPurchaseTokenAmountUsd(uint256 minPurchaseTokenAmountUsd);\\n    event UpdateGov(address gov);\\n\\n    /* Router.sol events*/\\n    event Swap(address account, address tokenIn, address tokenOut, uint256 amountIn, uint256 amountOut);\\n\\n    /* ShortsTracker.sol events*/\\n    event GlobalShortDataUpdated(address indexed token, uint256 globalShortSize, uint256 globalShortAveragePrice);\\n\\n    /* Vault.sol events */\\n    event BuyUSDM(address account, address token, uint256 tokenAmount, uint256 usdmAmount, uint256 feeBasisPoints);\\n    event SellUSDM(address account, address token, uint256 usdmAmount, uint256 tokenAmount, uint256 feeBasisPoints);\\n    event Swap(address account, address tokenIn, address tokenOut, uint256 amountIn, uint256 amountOut, uint256 amountOutAfterFees, uint256 feeBasisPoints);\\n    event IncreasePosition(bytes32 key, address account, address collateralToken, address indexToken, uint256 collateralDelta, uint256 sizeDelta, bool isLong, uint256 price, uint256 fee);\\n    event DecreasePosition(bytes32 key, address account, address collateralToken, address indexToken, uint256 collateralDelta, uint256 sizeDelta, bool isLong, uint256 price, uint256 fee);\\n    event LiquidatePosition(bytes32 key, address account, address collateralToken, address indexToken, bool isLong, uint256 size, uint256 collateral, uint256 reserveAmount, int256 realisedPnl, uint256 markPrice);\\n    event UpdatePosition(bytes32 key, uint256 size, uint256 collateral, uint256 averagePrice, uint256 entryFundingRate, uint256 reserveAmount, int256 realisedPnl, uint256 markPrice);\\n    event ClosePosition(bytes32 key, uint256 size, uint256 collateral, uint256 averagePrice, uint256 entryFundingRate, uint256 reserveAmount, int256 realisedPnl);\\n    event UpdateFundingRate(address token, uint256 fundingRate);\\n    event UpdatePnl(bytes32 key, bool hasProfit, uint256 delta);\\n    event CollectSwapFees(address token, uint256 feeUsd, uint256 feeTokens);\\n    event CollectMarginFees(address token, uint256 feeUsd, uint256 feeTokens);\\n    event DirectPoolDeposit(address token, uint256 amount);\\n    event IncreasePoolAmount(address token, uint256 amount);\\n    event DecreasePoolAmount(address token, uint256 amount);\\n    event IncreaseUsdmAmount(address token, uint256 amount);\\n    event DecreaseUsdmAmount(address token, uint256 amount);\\n    event IncreaseReservedAmount(address token, uint256 amount);\\n    event DecreaseReservedAmount(address token, uint256 amount);\\n    event IncreaseGuaranteedUsd(address token, uint256 amount);\\n    event DecreaseGuaranteedUsd(address token, uint256 amount);\\n\\n    /* Timelock.sol events */\\n    event SignalPendingAction(bytes32 action);\\n    event SignalApprove(address token, address spender, uint256 amount, bytes32 action);\\n    event SignalWithdrawToken(address target, address token, address receiver, uint256 amount, bytes32 action);\\n    event SignalMint(address token, address receiver, uint256 amount, bytes32 action);\\n    event SignalSetGov(address target, address gov, bytes32 action);\\n    event SignalSetHandler(address target, address handler, bool isActive, bytes32 action);\\n    event SignalSetPriceFeed(address vault, address priceFeed, bytes32 action);\\n    event SignalRedeemUsdm(address vault, address token, uint256 amount);\\n    event SignalVaultSetTokenConfig(address vault, address token, uint256 tokenDecimals, uint256 tokenWeight, uint256 minProfitBps, uint256 maxUsdmAmount, bool isStable, bool isShortable);\\n    event ClearAction(bytes32 action);\\n\\n    /* MlpManager.sol */\\n    event AddLiquidity(address account, address token, uint256 amount, uint256 aumInUsdm, uint256 mlpSupply, uint256 usdmAmount, uint256 mintAmount);\\n    event RemoveLiquidity(address account, address token, uint256 mlpAmount, uint256 aumInUsdm, uint256 mlpSupply, uint256 usdmAmount, uint256 amountOut);\\n\\n    /* RewardRouterV2 */\\n    event StakeMold(address account, address token, uint256 amount);\\n    event UnstakeMold(address account, address token, uint256 amount);\\n    event StakeMlp(address account, uint256 amount);\\n    event UnstakeMlp(address account, uint256 amount);\\n}\\n\",\"keccak256\":\"0x555bd8706eac18f05cbc296299b1379465408d2040130886612e55bbddbb7179\",\"license\":\"MIT\"},\"contracts/libraries/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x41b0da7db3e1f79b338824fed2bc4732430b78002a9d51c2cfa86ad5a12c2763\",\"license\":\"MIT\"},\"contracts/libraries/token/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xa3ce253082421a9e79d2b884ae6f60507b0cc73ea356674072091454c44cc556\",\"license\":\"MIT\"},\"contracts/peripherals/Timelock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\nimport \\\"../core/storage/TimelockStorage.sol\\\";\\n\\ncontract Timelock is TimelockStorage {\\n\\n    constructor(address _admin, uint256 _buffer, address _tokenManager, address _mintReceiver, address _mlpManager, uint256 _maxTokenSupply, uint256 _marginFeeBasisPoints, uint256 _maxMarginFeeBasisPoints) public {\\n        require(_buffer <= MAX_BUFFER, Errors.TIMELOCK_INVALID_BUFFER);\\n        admin = _admin;\\n        buffer = _buffer;\\n        tokenManager = _tokenManager;\\n        mintReceiver = _mintReceiver;\\n        mlpManager = _mlpManager;\\n        maxTokenSupply = _maxTokenSupply;\\n\\n        marginFeeBasisPoints = _marginFeeBasisPoints;\\n        maxMarginFeeBasisPoints = _maxMarginFeeBasisPoints;\\n    }\\n    \\n    function setAdmin(address _admin) external override onlyTokenManager {\\n        admin = _admin;\\n    }\\n\\n    function setExternalAdmin(address _target, address _admin) external onlyAdmin {\\n        require(_target != address(this), Errors.Timelock_Invalid_Target);\\n        IAdmin(_target).setAdmin(_admin);\\n    }\\n\\n    function setContractHandler(address _handler, bool _isActive) external onlyAdmin {\\n        isHandler[_handler] = _isActive;\\n    }\\n\\n    function setKeeper(address _keeper, bool _isActive) external onlyAdmin {\\n        isKeeper[_keeper] = _isActive;\\n    }\\n\\n    function setBuffer(uint256 _buffer) external onlyAdmin {\\n        require(_buffer <= MAX_BUFFER, Errors.Timelock_Invalid_Buffer);\\n        require(_buffer > buffer, Errors.Timelock_Buffer_Cannot_Be_Decreased);\\n        buffer = _buffer;\\n    }\\n\\n    function setMaxLeverage(address _vault, uint256 _maxLeverage) external onlyAdmin {\\n        require(_maxLeverage > MAX_LEVERAGE_VALIDATION, Errors.Timelock_invalid_maxLeverage);\\n        IVault(_vault).setMaxLeverage(_maxLeverage);\\n    }\\n\\n    function setFundingRate(address _vault, uint256 _fundingInterval, uint256 _fundingRateFactor, uint256 _stableFundingRateFactor) external onlyKeeperAndAbove {\\n        // TODO K\\n        //        require(_fundingRateFactor < MAX_FUNDING_RATE_FACTOR, Errors.Timelock_invalid_fundingRateFactor);\\n        //        require(_stableFundingRateFactor < MAX_FUNDING_RATE_FACTOR, Errors.Timelock_invalid_stableFundingRateFactor);\\n        IVault(_vault).setFundingRate(_fundingInterval, _fundingRateFactor, _stableFundingRateFactor);\\n    }\\n\\n    function setShouldToggleIsLeverageEnabled(bool _shouldToggleIsLeverageEnabled) external onlyHandlerAndAbove {\\n        shouldToggleIsLeverageEnabled = _shouldToggleIsLeverageEnabled;\\n    }\\n\\n    function setMarginFeeBasisPoints(uint256 _marginFeeBasisPoints, uint256 _maxMarginFeeBasisPoints) external onlyHandlerAndAbove {\\n        marginFeeBasisPoints = _marginFeeBasisPoints;\\n        maxMarginFeeBasisPoints = _maxMarginFeeBasisPoints;\\n    }\\n\\n    function setSwapFees(address _vault, uint256 _taxBasisPoints, uint256 _stableTaxBasisPoints, uint256 _mintBurnFeeBasisPoints, uint256 _swapFeeBasisPoints, uint256 _stableSwapFeeBasisPoints) external onlyKeeperAndAbove {\\n        IVault vault = IVault(_vault);\\n        vault.setFees(\\n            _taxBasisPoints,\\n            _stableTaxBasisPoints,\\n            _mintBurnFeeBasisPoints,\\n            _swapFeeBasisPoints,\\n            _stableSwapFeeBasisPoints,\\n            maxMarginFeeBasisPoints,\\n            vault.liquidationFeeUsd(),\\n            vault.minProfitTime(),\\n            vault.hasDynamicFees()\\n        );\\n    }\\n\\n    function setFees(address _vault, uint256 _taxBasisPoints, uint256 _stableTaxBasisPoints, uint256 _mintBurnFeeBasisPoints, uint256 _swapFeeBasisPoints, uint256 _stableSwapFeeBasisPoints, uint256 _marginFeeBasisPoints, uint256 _liquidationFeeUsd, uint256 _minProfitTime, bool _hasDynamicFees) external onlyKeeperAndAbove {\\n        marginFeeBasisPoints = _marginFeeBasisPoints;\\n        IVault(_vault).setFees(\\n            _taxBasisPoints,\\n            _stableTaxBasisPoints,\\n            _mintBurnFeeBasisPoints,\\n            _swapFeeBasisPoints,\\n            _stableSwapFeeBasisPoints,\\n            maxMarginFeeBasisPoints,\\n            _liquidationFeeUsd,\\n            _minProfitTime,\\n            _hasDynamicFees\\n        );\\n    }\\n\\n    function setIsLeverageEnabled(address _vault, bool _isLeverageEnabled) external override onlyHandlerAndAbove {\\n        IVault(_vault).setIsLeverageEnabled(_isLeverageEnabled);\\n    }\\n\\n    function setTokenConfig(address _vault, address _token, uint256 _tokenWeight, uint256 _minProfitBps, uint256 _maxUsdmAmount, uint256 _bufferAmount, uint256 _usdmAmount) external onlyKeeperAndAbove {\\n        require(_minProfitBps <= 500, Errors.Timelock_invalid_minProfitBps);\\n        IVault vault = IVault(_vault);\\n        require(vault.whitelistedTokens(_token), Errors.Timelock_token_not_yet_whitelisted);\\n        uint256 tokenDecimals = vault.tokenDecimals(_token);\\n        bool isStable = vault.stableTokens(_token);\\n        bool isShortable = vault.shortableTokens(_token);\\n        IVault(_vault).setTokenConfig(\\n            _token,\\n            tokenDecimals,\\n            _tokenWeight,\\n            _minProfitBps,\\n            _maxUsdmAmount,\\n            isStable,\\n            isShortable\\n        );\\n        IVault(_vault).setBufferAmount(_token, _bufferAmount);\\n        IVault(_vault).setUsdmAmount(_token, _usdmAmount);\\n    }\\n\\n    function setUsdmAmounts(address _vault, address[] memory _tokens, uint256[] memory _usdmAmounts) external onlyKeeperAndAbove {\\n        for (uint256 i = 0; i < _tokens.length; i++) {\\n            IVault(_vault).setUsdmAmount(_tokens[i], _usdmAmounts[i]);\\n        }\\n    }\\n\\n    function setMaxGlobalShortSize(address _vault, address _token, uint256 _amount) external onlyAdmin {\\n        IVault(_vault).setMaxGlobalShortSize(_token, _amount);\\n    }\\n\\n    function setIsSwapEnabled(address _vault, bool _isSwapEnabled) external onlyKeeperAndAbove {\\n        IVault(_vault).setIsSwapEnabled(_isSwapEnabled);\\n    }\\n\\n    function setTier(address _referralStorage, uint256 _tierId, uint256 _totalRebate, uint256 _discountShare) external onlyKeeperAndAbove {\\n        IReferralStorage(_referralStorage).setTier(_tierId, _totalRebate, _discountShare);\\n    }\\n\\n    function setReferrerTier(address _referralStorage, address _referrer, uint256 _tierId) external onlyKeeperAndAbove {\\n        IReferralStorage(_referralStorage).setReferrerTier(_referrer, _tierId);\\n    }\\n\\n    function setVaultUtils(address _vault, IVaultUtils _vaultUtils) external onlyAdmin {\\n        IVault(_vault).setVaultUtils(_vaultUtils);\\n    }\\n\\n    function setMaxGasPrice(address _vault, uint256 _maxGasPrice) external onlyAdmin {\\n        require(_maxGasPrice > 5000000000, Errors.TIMELOCK_INVALID_MAXGASPRICE);\\n        IVault(_vault).setMaxGasPrice(_maxGasPrice);\\n    }\\n\\n    function setInPrivateLiquidationMode(address _vault, bool _inPrivateLiquidationMode) external onlyAdmin {\\n        IVault(_vault).setInPrivateLiquidationMode(_inPrivateLiquidationMode);\\n    }\\n\\n    function setLiquidator(address _vault, address _liquidator, bool _isActive) external onlyAdmin {\\n        IVault(_vault).setLiquidator(_liquidator, _isActive);\\n    }\\n\\n    function setInPrivateTransferMode(address _token, bool _inPrivateTransferMode) external onlyAdmin {\\n        IBaseToken(_token).setInPrivateTransferMode(_inPrivateTransferMode);\\n    }\\n\\n    function setGov(address _target, address _gov) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"setGov\\\", _target, _gov));\\n        _validateAction(action);\\n        _clearAction(action);\\n        ITimelockTarget(_target).setGov(_gov);\\n    }\\n\\n    function setHandler(address _target, address _handler, bool _isActive) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"setHandler\\\", _target, _handler, _isActive));\\n        _validateAction(action);\\n        _clearAction(action);\\n        IHandlerTarget(_target).setHandler(_handler, _isActive);\\n    }\\n\\n    function setPriceFeed(address _vault, address _priceFeed) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"setPriceFeed\\\", _vault, _priceFeed));\\n        _validateAction(action);\\n        _clearAction(action);\\n        IVault(_vault).setPriceFeed(_priceFeed);\\n    }\\n\\n    function enableLeverage(address _vault) external override onlyHandlerAndAbove {\\n        IVault vault = IVault(_vault);\\n        if (shouldToggleIsLeverageEnabled) {\\n            vault.setIsLeverageEnabled(true);\\n        }\\n        vault.setFees(\\n            vault.taxBasisPoints(),\\n            vault.stableTaxBasisPoints(),\\n            vault.mintBurnFeeBasisPoints(),\\n            vault.swapFeeBasisPoints(),\\n            vault.stableSwapFeeBasisPoints(),\\n            marginFeeBasisPoints,\\n            vault.liquidationFeeUsd(),\\n            vault.minProfitTime(),\\n            vault.hasDynamicFees()\\n        );\\n    }\\n\\n    function disableLeverage(address _vault) external override onlyHandlerAndAbove {\\n        IVault vault = IVault(_vault);\\n        if (shouldToggleIsLeverageEnabled) {\\n            vault.setIsLeverageEnabled(false);\\n        }\\n        vault.setFees(\\n            vault.taxBasisPoints(),\\n            vault.stableTaxBasisPoints(),\\n            vault.mintBurnFeeBasisPoints(),\\n            vault.swapFeeBasisPoints(),\\n            vault.stableSwapFeeBasisPoints(),\\n            maxMarginFeeBasisPoints, // marginFeeBasisPoints\\n            vault.liquidationFeeUsd(),\\n            vault.minProfitTime(),\\n            vault.hasDynamicFees()\\n        );\\n    }\\n\\n    function updateUsdmSupply(uint256 usdmAmount) external onlyKeeperAndAbove {\\n        address usdm = IMlpManager(mlpManager).usdm();\\n        uint256 balance = IERC20(usdm).balanceOf(mlpManager);\\n        IUSDM(usdm).addVault(address(this));\\n        if (usdmAmount > balance) {\\n            uint256 mintAmount = usdmAmount.sub(balance);\\n            IUSDM(usdm).mint(mlpManager, mintAmount);\\n        } else {\\n            uint256 burnAmount = balance.sub(usdmAmount);\\n            IUSDM(usdm).burn(mlpManager, burnAmount);\\n        }\\n        IUSDM(usdm).removeVault(address(this));\\n    }\\n\\n    function removeAdmin(address _token, address _account) external onlyAdmin {\\n        IYieldToken(_token).removeAdmin(_account);\\n    }\\n\\n    function govSetCodeOwner(address _referralStorage, bytes32 _code, address _newAccount) external onlyKeeperAndAbove {\\n        IReferralStorage(_referralStorage).govSetCodeOwner(_code, _newAccount);\\n    }\\n\\n    function withdrawFees(address _vault, address _token, address _receiver) external onlyAdmin {\\n        IVault(_vault).withdrawFees(_token, _receiver);\\n    }\\n\\n    function batchWithdrawFees(address _vault, address[] memory _tokens) external onlyKeeperAndAbove {\\n        for (uint256 i = 0; i < _tokens.length; i++) {\\n            IVault(_vault).withdrawFees(_tokens[i], admin);\\n        }\\n    }\\n\\n    function batchSetBonusRewards(address _vester, address[] memory _accounts, uint256[] memory _amounts) external onlyKeeperAndAbove {\\n        require(_accounts.length == _amounts.length, Errors.TIMELOCK_INVALID_LENGTHS);\\n        if (!IHandlerTarget(_vester).isHandler(address(this))) {\\n            IHandlerTarget(_vester).setHandler(address(this), true);\\n        }\\n        for (uint256 i = 0; i < _accounts.length; i++) {\\n            address account = _accounts[i];\\n            uint256 amount = _amounts[i];\\n            IVester(_vester).setBonusRewards(account, amount);\\n        }\\n    }\\n\\n    function transferIn(address _sender, address _token, uint256 _amount) external onlyAdmin {\\n        IERC20(_token).transferFrom(_sender, address(this), _amount);\\n    }\\n\\n    function signalApprove(address _token, address _spender, uint256 _amount) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"approve\\\", _token, _spender, _amount));\\n        _setPendingAction(action);\\n        emit Events.SignalApprove(_token, _spender, _amount, action);\\n    }\\n\\n    function approve(address _token, address _spender, uint256 _amount) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"approve\\\", _token, _spender, _amount));\\n        _validateAction(action);\\n        _clearAction(action);\\n        IERC20(_token).approve(_spender, _amount);\\n    }\\n\\n    function signalWithdrawToken(address _target, address _token, address _receiver, uint256 _amount) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"withdrawToken\\\", _target, _token, _receiver, _amount));\\n        _setPendingAction(action);\\n        emit Events.SignalWithdrawToken(_target, _token, _receiver, _amount, action);\\n    }\\n\\n    function withdrawToken(address _target, address _token, address _receiver, uint256 _amount) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"withdrawToken\\\", _target, _token, _receiver, _amount));\\n        _validateAction(action);\\n        _clearAction(action);\\n        IBaseToken(_target).withdrawToken(_token, _receiver, _amount);\\n    }\\n\\n    function signalMint(address _token, address _receiver, uint256 _amount) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"mint\\\", _token, _receiver, _amount));\\n        _setPendingAction(action);\\n        emit Events.SignalMint(_token, _receiver, _amount, action);\\n    }\\n\\n    function processMint(address _token, address _receiver, uint256 _amount) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"mint\\\", _token, _receiver, _amount));\\n        _validateAction(action);\\n        _clearAction(action);\\n        _mint(_token, _receiver, _amount);\\n    }\\n\\n    function signalSetGov(address _target, address _gov) external override onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"setGov\\\", _target, _gov));\\n        _setPendingAction(action);\\n        emit Events.SignalSetGov(_target, _gov, action);\\n    }\\n\\n    function signalSetHandler(address _target, address _handler, bool _isActive) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"setHandler\\\", _target, _handler, _isActive));\\n        _setPendingAction(action);\\n        emit Events.SignalSetHandler(_target, _handler, _isActive, action);\\n    }\\n\\n    function signalSetPriceFeed(address _vault, address _priceFeed) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"setPriceFeed\\\", _vault, _priceFeed));\\n        _setPendingAction(action);\\n        emit Events.SignalSetPriceFeed(_vault, _priceFeed, action);\\n    }\\n\\n    function signalRedeemUsdm(address _vault, address _token, uint256 _amount) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"redeemUsdm\\\", _vault, _token, _amount));\\n        _setPendingAction(action);\\n        emit Events.SignalRedeemUsdm(_vault, _token, _amount);\\n    }\\n\\n    function redeemUsdm(address _vault, address _token, uint256 _amount) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"redeemUsdm\\\", _vault, _token, _amount));\\n        _validateAction(action);\\n        _clearAction(action);\\n        address usdm = IVault(_vault).usdm();\\n        IVault(_vault).setManager(address(this), true);\\n        IUSDM(usdm).addVault(address(this));\\n        IUSDM(usdm).mint(address(this), _amount);\\n        IERC20(usdm).transfer(address(_vault), _amount);\\n        IVault(_vault).sellUSDM(_token, mintReceiver);\\n        IVault(_vault).setManager(address(this), false);\\n        IUSDM(usdm).removeVault(address(this));\\n    }\\n\\n    function signalVaultSetTokenConfig(address _vault, address _token, uint256 _tokenDecimals, uint256 _tokenWeight, uint256 _minProfitBps, uint256 _maxUsdmAmount, bool _isStable, bool _isShortable) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\n                \\\"vaultSetTokenConfig\\\",\\n                _vault,\\n                _token,\\n                _tokenDecimals,\\n                _tokenWeight,\\n                _minProfitBps,\\n                _maxUsdmAmount,\\n                _isStable,\\n                _isShortable\\n            ));\\n        _setPendingAction(action);\\n        emit Events.SignalVaultSetTokenConfig(_vault, _token, _tokenDecimals, _tokenWeight, _minProfitBps, _maxUsdmAmount, _isStable, _isShortable);\\n    }\\n\\n    function vaultSetTokenConfig(address _vault, address _token, uint256 _tokenDecimals, uint256 _tokenWeight, uint256 _minProfitBps, uint256 _maxUsdmAmount, bool _isStable, bool _isShortable) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\n                \\\"vaultSetTokenConfig\\\",\\n                _vault,\\n                _token,\\n                _tokenDecimals,\\n                _tokenWeight,\\n                _minProfitBps,\\n                _maxUsdmAmount,\\n                _isStable,\\n                _isShortable\\n            ));\\n        _validateAction(action);\\n        _clearAction(action);\\n        IVault(_vault).setTokenConfig(_token, _tokenDecimals, _tokenWeight, _minProfitBps, _maxUsdmAmount, _isStable, _isShortable);\\n    }\\n\\n    function cancelAction(bytes32 _action) external onlyAdmin {\\n        _clearAction(_action);\\n    }\\n\\n    function _mint(address _token, address _receiver, uint256 _amount) private {\\n        IMintable mintable = IMintable(_token);\\n        if (!mintable.isMinter(address(this))) {\\n            mintable.setMinter(address(this), true);\\n        }\\n        mintable.mint(_receiver, _amount);\\n        require(IERC20(_token).totalSupply() <= maxTokenSupply, Errors.TIMELOCK_MAXTOKENSUPPLY_EXCEEDED);\\n    }\\n\\n    function _setPendingAction(bytes32 _action) private {\\n        require(pendingActions[_action] == 0, Errors.TIMELOCK_ACTION_ALREADY_SIGNALLED);\\n        pendingActions[_action] = block.timestamp.add(buffer);\\n        emit Events.SignalPendingAction(_action);\\n    }\\n\\n    function _validateAction(bytes32 _action) private view {\\n        require(pendingActions[_action] != 0, Errors.TIMELOCK_ACTION_NOT_SIGNALLED);\\n        require(pendingActions[_action] < block.timestamp, Errors.TIMELOCK_ACTION_TIME_NOT_YET_PASSED);\\n    }\\n\\n    function _clearAction(bytes32 _action) private {\\n        require(pendingActions[_action] != 0, Errors.TIMELOCK_INVALID_ACTION);\\n        delete pendingActions[_action];\\n        emit Events.ClearAction(_action);\\n    }\\n}\\n\",\"keccak256\":\"0x46e0bd641220445fa6e59fa17a23d4bdd6afdeef0d25ab2b02667157bf87b921\",\"license\":\"MIT\"},\"contracts/peripherals/interfaces/IHandlerTarget.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\ninterface IHandlerTarget {\\n    function isHandler(address _account) external returns (bool);\\n    function setHandler(address _handler, bool _isActive) external;\\n}\\n\",\"keccak256\":\"0xba6d63663113956ec94c8dda2ffc6af9063f4c1cccbac612d70c091a84db84ea\",\"license\":\"MIT\"},\"contracts/peripherals/interfaces/ITimelock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\ninterface ITimelock {\\n    function setAdmin(address _admin) external;\\n    function enableLeverage(address _vault) external;\\n    function disableLeverage(address _vault) external;\\n    function setIsLeverageEnabled(address _vault, bool _isLeverageEnabled) external;\\n    function signalSetGov(address _target, address _gov) external;\\n}\\n\",\"keccak256\":\"0x6578af6463e634c18ad3ec9f12e464b1a1421357c416537e531b31ac63ff13cd\",\"license\":\"MIT\"},\"contracts/peripherals/interfaces/ITimelockTarget.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\ninterface ITimelockTarget {\\n    function setGov(address _gov) external;\\n    function withdrawToken(address _token, address _account, uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0xd0f73cccf6690fef80ea40184ae89efb281effb7775222be5a9a2c536aa7cc82\",\"license\":\"MIT\"},\"contracts/referrals/interfaces/IReferralStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\ninterface IReferralStorage {\\n    function codeOwners(bytes32 _code) external view returns (address);\\n    function getTraderReferralInfo(address _account) external view returns (bytes32, address);\\n    function setTraderReferralCode(address _account, bytes32 _code) external;\\n    function setTier(uint256 _tierId, uint256 _totalRebate, uint256 _discountShare) external;\\n    function setReferrerTier(address _referrer, uint256 _tierId) external;\\n    function govSetCodeOwner(bytes32 _code, address _newAccount) external;\\n}\\n\",\"keccak256\":\"0xdc96e3661590fd72a5583a6b84bf29369b5e7080b532ce337b5b8d04edb5a495\",\"license\":\"MIT\"},\"contracts/staking/interfaces/IVester.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\ninterface IVester {\\n    function rewardTracker() external view returns (address);\\n    function claimForAccount(address _account, address _receiver) external returns (uint256);\\n    function claimable(address _account) external view returns (uint256);\\n    function cumulativeClaimAmounts(address _account) external view returns (uint256);\\n    function claimedAmounts(address _account) external view returns (uint256);\\n    function pairAmounts(address _account) external view returns (uint256);\\n    function getVestedAmount(address _account) external view returns (uint256);\\n    function transferredAverageStakedAmounts(address _account) external view returns (uint256);\\n    function transferredCumulativeRewards(address _account) external view returns (uint256);\\n    function cumulativeRewardDeductions(address _account) external view returns (uint256);\\n    function bonusRewards(address _account) external view returns (uint256);\\n    function transferStakeValues(address _sender, address _receiver) external;\\n    function setTransferredAverageStakedAmounts(address _account, uint256 _amount) external;\\n    function setTransferredCumulativeRewards(address _account, uint256 _amount) external;\\n    function setCumulativeRewardDeductions(address _account, uint256 _amount) external;\\n    function setBonusRewards(address _account, uint256 _amount) external;\\n    function getMaxVestableAmount(address _account) external view returns (uint256);\\n    function getCombinedAverageStakedAmount(address _account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xcc7c9d439980a893faf454c2aa0ffe52149fb01682fa431006d0725582a58d1f\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IBaseToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\ninterface IBaseToken {\\n    function totalStaked() external view returns (uint256);\\n    function stakedBalance(address _account) external view returns (uint256);\\n    function removeAdmin(address _account) external;\\n    function setInPrivateTransferMode(bool _inPrivateTransferMode) external;\\n    function withdrawToken(address _token, address _account, uint256 _amount) external;\\n}\",\"keccak256\":\"0x0d3e508af43f1ecefb9543bfef0e021ba449bcdb955af200ab96ff091668c385\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IMintable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\ninterface IMintable {\\n    function isMinter(address _account) external returns (bool);\\n    function setMinter(address _minter, bool _isActive) external;\\n    function mint(address _account, uint256 _amount) external;\\n    function burn(address _account, uint256 _amount) external;\\n}\",\"keccak256\":\"0x1cb14f340029d7d16406d49987335f073a0c4006cff2c46fd66b3d2c8717e2f8\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IUSDM.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\ninterface IUSDM {\\n    function addVault(address _vault) external;\\n    function removeVault(address _vault) external;\\n    function mint(address _account, uint256 _amount) external;\\n    function burn(address _account, uint256 _amount) external;\\n}\",\"keccak256\":\"0xcb6b3709bf056f0f19c58784d749f623be30eac4add2c3866918763803d164ba\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IYieldToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\ninterface IYieldToken {\\n    function totalStaked() external view returns (uint256);\\n    function stakedBalance(address _account) external view returns (uint256);\\n    function removeAdmin(address _account) external;\\n}\",\"keccak256\":\"0xa5784e03f73a3ed49df871e79c9013fd9664a6cccecdf45714ffbfad62edcf8d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162005c2338038062005c2383398181016040526101008110156200003857600080fd5b5080516020808301516040808501516060860151608087015160a088015160c089015160e0909901518551808701909652601986527f54696d656c6f636b3a20696e76616c6964205f62756666657200000000000000978601979097529697949692959194909390919062069780881115620001355760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015620000f9578181015183820152602001620000df565b50505050905090810190601f168015620001275780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600480546001600160a01b03998a1661010002610100600160a81b0319909116179055600096909655600580549588166001600160a01b0319968716179055600680549488169486169490941790935560078054929096169190931617909355600155600291909155600355615a7180620001b26000396000f3fe608060405234801561001057600080fd5b50600436106103ea5760003560e01c80637b6f775a1161021a578063cbb91c5e11610135578063e1f21c67116100c8578063e4652f4911610097578063ea430cdc1161007c578063ea430cdc14611121578063edaafe2014611157578063f851a4401461115f576103ea565b8063e4652f4914611038578063e8ae22711461106e576103ea565b8063e1f21c6714610f69578063e21b459114610f9f578063e30569e514610fc2578063e3cbeb0f14610fdf576103ea565b8063da76231611610104578063da76231614610e60578063db1c844114610ea4578063dce6e18d14610efd578063df3a66d914610f33576103ea565b8063cbb91c5e14610dd6578063cd2b123014610dde578063d1b9e85314610e0c578063d3c87bbb14610e3a576103ea565b8063996a7a1e116101ad578063bc476dfd1161017c578063bc476dfd14610d34578063bc8a8ab914610d62578063c142940a14610d98578063c7bb26a014610dce576103ea565b8063996a7a1e14610baa578063996e2bc914610bd8578063ab9930fe14610be0578063adc7ea3714610d17576103ea565b80638a39735a116101e95780638a39735a14610b4f5780638bf22c4614610b575780638e34c98f14610b8357806395082d2514610ba2576103ea565b80637b6f775a14610a9157806380894d6214610abd57806386803c7214610aeb57806387b27c7414610b19576103ea565b80632ba3725a1161030a57806355ef13951161029d5780636e5227d41161026c5780636e5227d4146109bf578063704b6c0214610a2057806376e1128614610a46578063781cc3d314610a74576103ea565b806355ef13951461093d57806361d075691461096b5780636ba42aaa146109735780636d63c1d014610999576103ea565b80634cd23f3b116102d95780634cd23f3b1461089357806350f7c204146108cf57806351a6de0d146108d75780635581829414610905576103ea565b80632ba3725a14610813578063318bc6891461082d57806346ea87af1461083557806347de43e21461085b576103ea565b8063206c665d1161038257806323aaad121161035157806323aaad121461076d57806324ccbe3014610789578063268959e5146107c15780632a709b14146107ef576103ea565b8063206c665d146106ae57806321754d9e146106cb57806321bd059214610707578063227f03eb14610735576103ea565b80631154e808116103be5780631154e808146105e4578063117cf2041461061c578063185051c11461064a578063204bbc5414610678576103ea565b80629a698e146103ef57806309cc9a08146105285780630e0dc4261461055e5780630e9587f3146105ac575b600080fd5b6105266004803603606081101561040557600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561043057600080fd5b82018360208201111561044257600080fd5b8035906020019184602083028401116401000000008311171561046457600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092959493602081019350359150506401000000008111156104b457600080fd5b8201836020820111156104c657600080fd5b803590602001918460208302840111640100000000831117156104e857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611167945050505050565b005b6105266004803603606081101561053e57600080fd5b506001600160a01b03813581169160208101359091169060400135611482565b610526600480360360e081101561057457600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a08101359060c00135611586565b610526600480360360608110156105c257600080fd5b506001600160a01b038135811691602081013582169160409091013516611aa8565b610526600480360360608110156105fa57600080fd5b506001600160a01b038135811691602081013590911690604001351515611b8b565b6105266004803603604081101561063257600080fd5b506001600160a01b0381351690602001351515611cc1565b6105266004803603604081101561066057600080fd5b506001600160a01b0381351690602001351515611dab565b6105266004803603606081101561068e57600080fd5b506001600160a01b03813581169160208101359160409091013516611e28565b610526600480360360208110156106c457600080fd5b5035611f22565b610526600480360360808110156106e157600080fd5b506001600160a01b03813581169160208101358216916040820135169060600135612295565b6105266004803603604081101561071d57600080fd5b506001600160a01b03813516906020013515156123e5565b6105266004803603608081101561074b57600080fd5b506001600160a01b03813516906020810135906040810135906060013561247f565b61077561255b565b604080519115158252519081900360200190f35b6105266004803603606081101561079f57600080fd5b506001600160a01b038135811691602081013590911690604001351515612564565b610526600480360360408110156107d757600080fd5b506001600160a01b0381358116916020013516612672565b6107f7612713565b604080516001600160a01b039092168252519081900360200190f35b61081b612722565b60408051918252519081900360200190f35b61081b612729565b6107756004803603602081101561084b57600080fd5b50356001600160a01b031661272f565b6105266004803603606081101561087157600080fd5b506001600160a01b038135811691602081013590911690604001351515612744565b610526600480360360808110156108a957600080fd5b506001600160a01b038135811691602081013582169160408201351690606001356127ef565b61081b61290f565b610526600480360360408110156108ed57600080fd5b506001600160a01b0381358116916020013516612915565b6105266004803603608081101561091b57600080fd5b506001600160a01b038135169060208101359060408101359060600135612a14565b6105266004803603604081101561095357600080fd5b506001600160a01b0381358116916020013516612af0565b61081b612c1e565b6107756004803603602081101561098957600080fd5b50356001600160a01b0316612c25565b610526600480360360208110156109af57600080fd5b50356001600160a01b0316612c3a565b61052660048036036101408110156109d657600080fd5b506001600160a01b038135169060208101359060408101359060608101359060808101359060a08101359060c08101359060e081013590610100810135906101200135151561310d565b61052660048036036020811015610a3657600080fd5b50356001600160a01b031661325b565b61052660048036036040811015610a5c57600080fd5b506001600160a01b03813581169160200135166132e7565b61052660048036036020811015610a8a57600080fd5b50356133eb565b61052660048036036040811015610aa757600080fd5b506001600160a01b038135169060200135613449565b61052660048036036040811015610ad357600080fd5b506001600160a01b0381358116916020013516613567565b61052660048036036040811015610b0157600080fd5b506001600160a01b0381351690602001351515613662565b61052660048036036060811015610b2f57600080fd5b506001600160a01b038135811691602081013590911690604001356136fc565b61081b6137ff565b61052660048036036040811015610b6d57600080fd5b506001600160a01b038135169060200135613804565b61052660048036036020811015610b9957600080fd5b50351515613924565b61081b6139a3565b61052660048036036040811015610bc057600080fd5b506001600160a01b03813581169160200135166139b4565b61081b613aaa565b61052660048036036060811015610bf657600080fd5b6001600160a01b038235169190810190604081016020820135640100000000811115610c2157600080fd5b820183602082011115610c3357600080fd5b80359060200191846020830284011164010000000083111715610c5557600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050640100000000811115610ca557600080fd5b820183602082011115610cb757600080fd5b80359060200191846020830284011164010000000083111715610cd957600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550613ab0945050505050565b61052660048036036020811015610d2d57600080fd5b5035613be3565b61052660048036036040811015610d4a57600080fd5b506001600160a01b0381358116916020013516613d2c565b61052660048036036060811015610d7857600080fd5b506001600160a01b03813581169160208101359091169060400135613dcd565b61052660048036036060811015610dae57600080fd5b506001600160a01b03813581169160208101359091169060400135613e8e565b6107f7613f6b565b6107f7613f7a565b61052660048036036040811015610df457600080fd5b506001600160a01b0381351690602001351515613f89565b61052660048036036040811015610e2257600080fd5b506001600160a01b038135169060200135151561403d565b61052660048036036020811015610e5057600080fd5b50356001600160a01b03166140ba565b610526600480360360c0811015610e7657600080fd5b506001600160a01b038135169060208101359060408101359060608101359060808101359060a001356143f9565b6105266004803603610100811015610ebb57600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a08101359060c081013515159060e001351515614687565b61052660048036036060811015610f1357600080fd5b506001600160a01b038135811691602081013590911690604001356147f3565b61052660048036036060811015610f4957600080fd5b506001600160a01b038135811691602081013590911690604001356148fa565b61052660048036036060811015610f7f57600080fd5b506001600160a01b038135811691602081013590911690604001356149a3565b61052660048036036040811015610fb557600080fd5b5080359060200135614add565b61081b60048036036020811015610fd857600080fd5b5035614b54565b6105266004803603610100811015610ff657600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060808101359060a08101359060c081013515159060e001351515614b66565b6105266004803603606081101561104e57600080fd5b506001600160a01b03813581169160208101359091169060400135614cfa565b6105266004803603604081101561108457600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156110af57600080fd5b8201836020820111156110c157600080fd5b803590602001918460208302840111640100000000831117156110e357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550614dbe945050505050565b6105266004803603606081101561113757600080fd5b506001600160a01b03813581169160208101359091169060400135614f11565b61081b61532d565b6107f7615333565b60045461010090046001600160a01b031633148061119457503360009081526009602052604090205460ff165b806111ae5750336000908152600a602052604090205460ff165b6111ed576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b80518251146040518060400160405280601981526020017f54696d656c6f636b3a20696e76616c6964206c656e6774687300000000000000815250906112b15760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561127657818101518382015260200161125e565b50505050905090810190601f1680156112a35780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50604080517f46ea87af00000000000000000000000000000000000000000000000000000000815230600482015290516001600160a01b038516916346ea87af9160248083019260209291908290030181600087803b15801561131357600080fd5b505af1158015611327573d6000803e3d6000fd5b505050506040513d602081101561133d57600080fd5b50516113c357604080517f9cb7de4b0000000000000000000000000000000000000000000000000000000081523060048201526001602482015290516001600160a01b03851691639cb7de4b91604480830192600092919082900301818387803b1580156113aa57600080fd5b505af11580156113be573d6000803e3d6000fd5b505050505b60005b825181101561147c5760008382815181106113dd57fe5b6020026020010151905060008383815181106113f557fe5b60200260200101519050856001600160a01b03166341f2272483836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b15801561145657600080fd5b505af115801561146a573d6000803e3d6000fd5b5050600190940193506113c692505050565b50505050565b60045461010090046001600160a01b031633146114d4576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b60408051631b5a5b9d60e21b6020808301919091526001600160601b0319606087811b8216602485015286901b166038830152604c80830185905283518084039091018152606c909201909252805191012061152f81615347565b604080516001600160a01b038087168252851660208201528082018490526060810183905290517f23d37bec99db82564427c9bbfe48ad7434bccf413a40fd357fb838c90a0d68289181900360800190a150505050565b60045461010090046001600160a01b03163314806115b357503360009081526009602052604090205460ff165b806115cd5750336000908152600a602052604090205460ff165b61160c576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b60408051808201909152601f81527f54696d656c6f636b3a20696e76616c6964205f6d696e50726f6669744270730060208201526101f48511156116915760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561127657818101518382015260200161125e565b50604080517fdaf9c2100000000000000000000000000000000000000000000000000000000081526001600160a01b0388811660048301529151899283169163daf9c210916024808301926020929190829003018186803b1580156116f557600080fd5b505afa158015611709573d6000803e3d6000fd5b505050506040513d602081101561171f57600080fd5b5051604080516060810190915260238082526159906020830139906117855760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561127657818101518382015260200161125e565b506000816001600160a01b0316638ee573ac896040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156117d557600080fd5b505afa1580156117e9573d6000803e3d6000fd5b505050506040513d60208110156117ff57600080fd5b5051604080517f42b60b030000000000000000000000000000000000000000000000000000000081526001600160a01b038b811660048301529151929350600092918516916342b60b0391602480820192602092909190829003018186803b15801561186a57600080fd5b505afa15801561187e573d6000803e3d6000fd5b505050506040513d602081101561189457600080fd5b5051604080517fdb3555fb0000000000000000000000000000000000000000000000000000000081526001600160a01b038c8116600483015291519293506000929186169163db3555fb91602480820192602092909190829003018186803b1580156118ff57600080fd5b505afa158015611913573d6000803e3d6000fd5b505050506040513d602081101561192957600080fd5b505160408051633c5a6e3560e01b81526001600160a01b038d8116600483015260248201879052604482018d9052606482018c9052608482018b905285151560a483015283151560c48301529151929350908d1691633c5a6e359160e48082019260009290919082900301818387803b1580156119a557600080fd5b505af11580156119b9573d6000803e3d6000fd5b505050508a6001600160a01b0316638585f4d28b886040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015611a1457600080fd5b505af1158015611a28573d6000803e3d6000fd5b505050508a6001600160a01b031663d45200d18b876040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015611a8357600080fd5b505af1158015611a97573d6000803e3d6000fd5b505050505050505050505050505050565b60045461010090046001600160a01b03163314611afa576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b826001600160a01b031663f255527883836040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b0316815260200192505050602060405180830381600087803b158015611b5a57600080fd5b505af1158015611b6e573d6000803e3d6000fd5b505050506040513d6020811015611b8457600080fd5b5050505050565b60045461010090046001600160a01b03163314611bdd576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b604080516939b2ba2430b7323632b960b11b6020808301919091526001600160601b0319606087811b8216602a85015286901b16603e83015283151560f81b60528301528251603381840301815260539092019092528051910120611c418161541d565b611c4a81615537565b836001600160a01b0316639cb7de4b84846040518363ffffffff1660e01b815260040180836001600160a01b03168152602001821515815260200192505050600060405180830381600087803b158015611ca357600080fd5b505af1158015611cb7573d6000803e3d6000fd5b5050505050505050565b60045461010090046001600160a01b0316331480611cee57503360009081526009602052604090205460ff165b80611d085750336000908152600a602052604090205460ff165b611d47576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b816001600160a01b03166330455ede826040518263ffffffff1660e01b8152600401808215158152602001915050600060405180830381600087803b158015611d8f57600080fd5b505af1158015611da3573d6000803e3d6000fd5b505050505050565b60045461010090046001600160a01b03163314611dfd576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b6001600160a01b03919091166000908152600960205260409020805460ff1916911515919091179055565b60045461010090046001600160a01b0316331480611e5557503360009081526009602052604090205460ff165b80611e6f5750336000908152600a602052604090205460ff165b611eae576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b826001600160a01b031663dfcfa25083836040518363ffffffff1660e01b815260040180838152602001826001600160a01b0316815260200192505050600060405180830381600087803b158015611f0557600080fd5b505af1158015611f19573d6000803e3d6000fd5b50505050505050565b60045461010090046001600160a01b0316331480611f4f57503360009081526009602052604090205460ff165b80611f695750336000908152600a602052604090205460ff165b611fa8576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b600754604080517fee138d0f00000000000000000000000000000000000000000000000000000000815290516000926001600160a01b03169163ee138d0f916004808301926020929190829003018186803b15801561200657600080fd5b505afa15801561201a573d6000803e3d6000fd5b505050506040513d602081101561203057600080fd5b5051600754604080517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b0392831660048201529051929350600092918416916370a0823191602480820192602092909190829003018186803b15801561209e57600080fd5b505afa1580156120b2573d6000803e3d6000fd5b505050506040513d60208110156120c857600080fd5b5051604080516312b5ad0160e11b815230600482015290519192506001600160a01b0384169163256b5a029160248082019260009290919082900301818387803b15801561211557600080fd5b505af1158015612129573d6000803e3d6000fd5b50505050808311156121b7576000612141848361561b565b600754604080516340c10f1960e01b81526001600160a01b039283166004820152602481018490529051929350908516916340c10f199160448082019260009290919082900301818387803b15801561219957600080fd5b505af11580156121ad573d6000803e3d6000fd5b505050505061224e565b60006121c3828561561b565b600754604080517f9dc29fac0000000000000000000000000000000000000000000000000000000081526001600160a01b03928316600482015260248101849052905192935090851691639dc29fac9160448082019260009290919082900301818387803b15801561223457600080fd5b505af1158015612248573d6000803e3d6000fd5b50505050505b6040805163ceb68c2360e01b815230600482015290516001600160a01b0384169163ceb68c2391602480830192600092919082900301818387803b158015611f0557600080fd5b60045461010090046001600160a01b031633146122e7576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b604080516c3bb4ba34323930bbaa37b5b2b760991b6020808301919091526001600160601b0319606088811b8216602d85015287811b8216604185015286901b166055830152606980830185905283518084039091018152608990920190925280519101206123558161541d565b61235e81615537565b846001600160a01b03166301e336678585856040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050600060405180830381600087803b1580156123c657600080fd5b505af11580156123da573d6000803e3d6000fd5b505050505050505050565b60045461010090046001600160a01b03163314612437576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b816001600160a01b031663f07bbf77826040518263ffffffff1660e01b8152600401808215158152602001915050600060405180830381600087803b158015611d8f57600080fd5b60045461010090046001600160a01b03163314806124ac57503360009081526009602052604090205460ff165b806124c65750336000908152600a602052604090205460ff165b612505576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b836001600160a01b0316638a27d4688484846040518463ffffffff1660e01b8152600401808481526020018381526020018281526020019350505050600060405180830381600087803b158015611ca357600080fd5b60045460ff1681565b60045461010090046001600160a01b031633146125b6576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b604080516939b2ba2430b7323632b960b11b6020808301919091526001600160601b0319606087811b8216602a85015286901b16603e83015283151560f81b6052830152825160338184030181526053909201909252805191012061261a81615347565b604080516001600160a01b03808716825285166020820152831515818301526060810183905290517f1929c4e13b0dbbad7856b9ce1fc9dca98c7bf7cedd56e22c04dd60ad1d34fe4b9181900360800190a150505050565b60045461010090046001600160a01b031633146126c4576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b816001600160a01b0316631785f53c826040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b158015611d8f57600080fd5b6005546001600160a01b031681565b6207a12081565b60025481565b60096020526000908152604090205460ff1681565b60045461010090046001600160a01b03163314612796576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b826001600160a01b0316634453a37483836040518363ffffffff1660e01b815260040180836001600160a01b03168152602001821515815260200192505050600060405180830381600087803b158015611f0557600080fd5b60045461010090046001600160a01b03163314612841576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b604080516c3bb4ba34323930bbaa37b5b2b760991b6020808301919091526001600160601b0319606088811b8216602d85015287811b8216604185015286901b166055830152606980830185905283518084039091018152608990920190925280519101206128af81615347565b604080516001600160a01b0380881682528087166020830152851681830152606081018490526080810183905290517f9ed7b0f07a9eed51079fab67f6d0f141f167f5b17fdb5a23282280e15fcafed39181900360a00190a15050505050565b60015481565b60045461010090046001600160a01b03163314612967576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b604080516539b2ba23b7bb60d11b6020808301919091526001600160601b0319606086811b8216602685015285901b16603a8301528251602e818403018152604e90920190925280519101206129bc8161541d565b6129c581615537565b826001600160a01b031663cfad57a2836040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b158015611f0557600080fd5b60045461010090046001600160a01b0316331480612a4157503360009081526009602052604090205460ff165b80612a5b5750336000908152600a602052604090205460ff165b612a9a576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b836001600160a01b031663836a01878484846040518463ffffffff1660e01b8152600401808481526020018381526020018281526020019350505050600060405180830381600087803b158015611ca357600080fd5b60045461010090046001600160a01b03163314612b42576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b60408051808201909152601981527f54696d656c6f636b3a20696e76616c6964205f7461726765740000000000000060208201526001600160a01b038316301415612bce5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561127657818101518382015260200161125e565b50816001600160a01b031663704b6c02826040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b158015611d8f57600080fd5b6206978081565b600a6020526000908152604090205460ff1681565b60045461010090046001600160a01b0316331480612c6757503360009081526009602052604090205460ff165b612ca6576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b600454819060ff1615612d145760408051637c2eb9f760e01b81526001600482015290516001600160a01b03831691637c2eb9f791602480830192600092919082900301818387803b158015612cfb57600080fd5b505af1158015612d0f573d6000803e3d6000fd5b505050505b806001600160a01b03166340eb3802826001600160a01b0316637a210a2b6040518163ffffffff1660e01b815260040160206040518083038186803b158015612d5c57600080fd5b505afa158015612d70573d6000803e3d6000fd5b505050506040513d6020811015612d8657600080fd5b505160408051630875ab6160e11b815290516001600160a01b038616916310eb56c2916004808301926020929190829003018186803b158015612dc857600080fd5b505afa158015612ddc573d6000803e3d6000fd5b505050506040513d6020811015612df257600080fd5b505160408051631351ecc160e21b815290516001600160a01b03871691634d47b304916004808301926020929190829003018186803b158015612e3457600080fd5b505afa158015612e48573d6000803e3d6000fd5b505050506040513d6020811015612e5e57600080fd5b50516040805163511791c960e11b815290516001600160a01b0388169163a22f2392916004808301926020929190829003018186803b158015612ea057600080fd5b505afa158015612eb4573d6000803e3d6000fd5b505050506040513d6020811015612eca57600080fd5b50516040805163df73a26760e01b815290516001600160a01b0389169163df73a267916004808301926020929190829003018186803b158015612f0c57600080fd5b505afa158015612f20573d6000803e3d6000fd5b505050506040513d6020811015612f3657600080fd5b5051600254604080516305d349a560e21b815290516001600160a01b038b169163174d2694916004808301926020929190829003018186803b158015612f7b57600080fd5b505afa158015612f8f573d6000803e3d6000fd5b505050506040513d6020811015612fa557600080fd5b50516040805163d9ac422560e01b815290516001600160a01b038c169163d9ac4225916004808301926020929190829003018186803b158015612fe757600080fd5b505afa158015612ffb573d6000803e3d6000fd5b505050506040513d602081101561301157600080fd5b505160408051639f392eb360e01b815290516001600160a01b038d1691639f392eb3916004808301926020929190829003018186803b15801561305357600080fd5b505afa158015613067573d6000803e3d6000fd5b505050506040513d602081101561307d57600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e08d901b168152600481019a909a5260248a019890985260448901969096526064880194909452608487019290925260a486015260c485015260e484015215156101048301525161012480830192600092919082900301818387803b158015611d8f57600080fd5b60045461010090046001600160a01b031633148061313a57503360009081526009602052604090205460ff165b806131545750336000908152600a602052604090205460ff165b613193576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b6002849055600354604080517f40eb3802000000000000000000000000000000000000000000000000000000008152600481018c9052602481018b9052604481018a9052606481018990526084810188905260a481019290925260c4820185905260e48201849052821515610104830152516001600160a01b038c16916340eb38029161012480830192600092919082900301818387803b15801561323757600080fd5b505af115801561324b573d6000803e3d6000fd5b5050505050505050505050505050565b6005546001600160a01b031633146132a8576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b600480546001600160a01b03909216610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff909216919091179055565b60045461010090046001600160a01b03163314613339576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b604080516b1cd95d141c9a58d95199595960a21b6020808301919091526001600160601b0319606086811b8216602c85015285901b168284015282516034818403018152605490920190925280519101206133938161541d565b61339c81615537565b826001600160a01b031663724e78da836040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b158015611f0557600080fd5b60045461010090046001600160a01b0316331461343d576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b61344681615537565b50565b60045461010090046001600160a01b0316331461349b576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b60408051808201909152601e81527f54696d656c6f636b3a20696e76616c6964205f6d61784c65766572616765000060208201526207a12082116135205760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561127657818101518382015260200161125e565b50816001600160a01b031663d3127e63826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015611d8f57600080fd5b60045461010090046001600160a01b031633146135b9576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b604080516b1cd95d141c9a58d95199595960a21b6020808301919091526001600160601b0319606086811b8216602c85015285901b1682840152825160348184030181526054909201909252805191012061361381615347565b604080516001600160a01b0380861682528416602082015280820183905290517fb878dd4b5762f4118ad54995be907dd2bcd915d942e4ac75580fba9b4ee4727f9181900360600190a1505050565b60045461010090046001600160a01b031633146136b4576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b816001600160a01b0316635a47a1a7826040518263ffffffff1660e01b8152600401808215158152602001915050600060405180830381600087803b158015611d8f57600080fd5b60045461010090046001600160a01b0316331461374e576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b604080516972656465656d5573646d60b01b6020808301919091526001600160601b0319606087811b8216602a85015286901b16603e830152605280830185905283518084039091018152607290920190925280519101206137af81615347565b604080516001600160a01b0380871682528516602082015280820184905290517f475cfa9d59e3793aeeebb2fb1c4b57588d7d0a052021f3a145e3daedccaf4af09181900360600190a150505050565b60c881565b60045461010090046001600160a01b03163314613856576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b60408051808201909152601481527f496e76616c6964205f6d61784761735072696365000000000000000000000000602082015264012a05f20082116138dd5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561127657818101518382015260200161125e565b50816001600160a01b031663d2fa635e826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015611d8f57600080fd5b60045461010090046001600160a01b031633148061395157503360009081526009602052604090205460ff165b613990576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b6004805460ff1916911515919091179055565b6c0c9f2c9cd04674edea4000000081565b60045461010090046001600160a01b03163314613a06576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b604080516539b2ba23b7bb60d11b6020808301919091526001600160601b0319606086811b8216602685015285901b16603a8301528251602e818403018152604e9092019092528051910120613a5b81615347565b604080516001600160a01b0380861682528416602082015280820183905290517f2701a94fd55a560e291f3c54d36580040670d6fde558a77a75d619e38139f7139181900360600190a1505050565b60035481565b60045461010090046001600160a01b0316331480613add57503360009081526009602052604090205460ff165b80613af75750336000908152600a602052604090205460ff165b613b36576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b60005b825181101561147c57836001600160a01b031663d45200d1848381518110613b5d57fe5b6020026020010151848481518110613b7157fe5b60200260200101516040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015613bbf57600080fd5b505af1158015613bd3573d6000803e3d6000fd5b505060019092019150613b399050565b60045461010090046001600160a01b03163314613c35576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b60408051808201909152601981527f54696d656c6f636b3a20696e76616c6964205f62756666657200000000000000602082015262069780821115613cbb5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561127657818101518382015260200161125e565b5060005481116040518060600160405280602481526020016159d76024913990613d265760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561127657818101518382015260200161125e565b50600055565b60045461010090046001600160a01b03163314613d7e576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b816001600160a01b03166371089f4d826040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b158015611d8f57600080fd5b60045461010090046001600160a01b03163314613e1f576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b60408051631b5a5b9d60e21b6020808301919091526001600160601b0319606087811b8216602485015286901b166038830152604c80830185905283518084039091018152606c9092019092528051910120613e7a8161541d565b613e8381615537565b61147c848484615664565b60045461010090046001600160a01b0316331480613ebb57503360009081526009602052604090205460ff165b80613ed55750336000908152600a602052604090205460ff165b613f14576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b826001600160a01b0316633fb8b32383836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015611f0557600080fd5b6006546001600160a01b031681565b6007546001600160a01b031681565b60045461010090046001600160a01b0316331480613fb657503360009081526009602052604090205460ff165b613ff5576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b816001600160a01b0316637c2eb9f7826040518263ffffffff1660e01b8152600401808215158152602001915050600060405180830381600087803b158015611d8f57600080fd5b60045461010090046001600160a01b0316331461408f576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b6001600160a01b03919091166000908152600a60205260409020805460ff1916911515919091179055565b60045461010090046001600160a01b03163314806140e757503360009081526009602052604090205460ff165b614126576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b600454819060ff16156141925760408051637c2eb9f760e01b815260006004820181905291516001600160a01b03841692637c2eb9f7926024808201939182900301818387803b15801561417957600080fd5b505af115801561418d573d6000803e3d6000fd5b505050505b806001600160a01b03166340eb3802826001600160a01b0316637a210a2b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156141da57600080fd5b505afa1580156141ee573d6000803e3d6000fd5b505050506040513d602081101561420457600080fd5b505160408051630875ab6160e11b815290516001600160a01b038616916310eb56c2916004808301926020929190829003018186803b15801561424657600080fd5b505afa15801561425a573d6000803e3d6000fd5b505050506040513d602081101561427057600080fd5b505160408051631351ecc160e21b815290516001600160a01b03871691634d47b304916004808301926020929190829003018186803b1580156142b257600080fd5b505afa1580156142c6573d6000803e3d6000fd5b505050506040513d60208110156142dc57600080fd5b50516040805163511791c960e11b815290516001600160a01b0388169163a22f2392916004808301926020929190829003018186803b15801561431e57600080fd5b505afa158015614332573d6000803e3d6000fd5b505050506040513d602081101561434857600080fd5b50516040805163df73a26760e01b815290516001600160a01b0389169163df73a267916004808301926020929190829003018186803b15801561438a57600080fd5b505afa15801561439e573d6000803e3d6000fd5b505050506040513d60208110156143b457600080fd5b5051600354604080516305d349a560e21b815290516001600160a01b038b169163174d2694916004808301926020929190829003018186803b158015612f7b57600080fd5b60045461010090046001600160a01b031633148061442657503360009081526009602052604090205460ff165b806144405750336000908152600a602052604090205460ff165b61447f576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b6000869050806001600160a01b03166340eb38028787878787600354886001600160a01b031663174d26946040518163ffffffff1660e01b815260040160206040518083038186803b1580156144d457600080fd5b505afa1580156144e8573d6000803e3d6000fd5b505050506040513d60208110156144fe57600080fd5b50516040805163d9ac422560e01b815290516001600160a01b038c169163d9ac4225916004808301926020929190829003018186803b15801561454057600080fd5b505afa158015614554573d6000803e3d6000fd5b505050506040513d602081101561456a57600080fd5b505160408051639f392eb360e01b815290516001600160a01b038d1691639f392eb3916004808301926020929190829003018186803b1580156145ac57600080fd5b505afa1580156145c0573d6000803e3d6000fd5b505050506040513d60208110156145d657600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e08d901b168152600481019a909a5260248a019890985260448901969096526064880194909452608487019290925260a486015260c485015260e484015215156101048301525161012480830192600092919082900301818387803b15801561466657600080fd5b505af115801561467a573d6000803e3d6000fd5b5050505050505050505050565b60045461010090046001600160a01b031633146146d9576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b604080517f7661756c74536574546f6b656e436f6e666967000000000000000000000000006020808301919091526001600160601b031960608c811b821660338501528b901b166047830152605b8201899052607b8201889052609b820187905260bb820186905284151560f890811b60db840152841515901b60dc830152825160bd81840301815260dd909201909252805191012061477881615347565b604080516001600160a01b03808c1682528a166020820152808201899052606081018890526080810187905260a0810186905284151560c082015283151560e082015290517f3510e9d8245371c6c1061c33781ce16bd0eafa03cd3d0781865036520af4c743918190036101000190a1505050505050505050565b60045461010090046001600160a01b03163314614845576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b6040805166617070726f766560c81b6020808301919091526001600160601b0319606087811b8216602785015286901b16603b830152604f80830185905283518084039091018152606f90920190925280519101206148a381615347565b604080516001600160a01b038087168252851660208201528082018490526060810183905290517f6af9d86ba7407a934e941ed8ae5f779369a88fe8ba2cd1c204185d6f8a8287fd9181900360800190a150505050565b60045461010090046001600160a01b0316331461494c576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b826001600160a01b031663efa10a6e83836040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015611f0557600080fd5b60045461010090046001600160a01b031633146149f5576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b6040805166617070726f766560c81b6020808301919091526001600160601b0319606087811b8216602785015286901b16603b830152604f80830185905283518084039091018152606f9092019092528051910120614a538161541d565b614a5c81615537565b836001600160a01b031663095ea7b384846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b158015614ab357600080fd5b505af1158015614ac7573d6000803e3d6000fd5b505050506040513d6020811015611da357600080fd5b60045461010090046001600160a01b0316331480614b0a57503360009081526009602052604090205460ff165b614b49576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b600291909155600355565b60086020526000908152604090205481565b60045461010090046001600160a01b03163314614bb8576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b604080517f7661756c74536574546f6b656e436f6e666967000000000000000000000000006020808301919091526001600160601b031960608c811b821660338501528b901b166047830152605b8201899052607b8201889052609b820187905260bb820186905284151560f890811b60db840152841515901b60dc830152825160bd81840301815260dd9092019092528051910120614c578161541d565b614c6081615537565b60408051633c5a6e3560e01b81526001600160a01b038a81166004830152602482018a905260448201899052606482018890526084820187905285151560a483015284151560c48301529151918b1691633c5a6e359160e48082019260009290919082900301818387803b158015614cd757600080fd5b505af1158015614ceb573d6000803e3d6000fd5b50505050505050505050505050565b60045461010090046001600160a01b03163314614d4c576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b604080517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152306024830152604482018490529151918416916323b872dd916064808201926020929091908290030181600087803b158015611b5a57600080fd5b60045461010090046001600160a01b0316331480614deb57503360009081526009602052604090205460ff165b80614e055750336000908152600a602052604090205460ff165b614e44576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b60005b8151811015614f0c57826001600160a01b031663f2555278838381518110614e6b57fe5b6020026020010151600460019054906101000a90046001600160a01b03166040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b0316815260200192505050602060405180830381600087803b158015614ed857600080fd5b505af1158015614eec573d6000803e3d6000fd5b505050506040513d6020811015614f0257600080fd5b5050600101614e47565b505050565b60045461010090046001600160a01b03163314614f63576040805162461bcd60e51b815260206004820152601360248201526000805160206159fb833981519152604482015290519081900360640190fd5b604080516972656465656d5573646d60b01b6020808301919091526001600160601b0319606087811b8216602a85015286901b16603e83015260528083018590528351808403909101815260729092019092528051910120614fc48161541d565b614fcd81615537565b6000846001600160a01b031663ee138d0f6040518163ffffffff1660e01b815260040160206040518083038186803b15801561500857600080fd5b505afa15801561501c573d6000803e3d6000fd5b505050506040513d602081101561503257600080fd5b5051604080516352f4877760e11b81523060048201526001602482015290519192506001600160a01b0387169163a5e90eee9160448082019260009290919082900301818387803b15801561508657600080fd5b505af115801561509a573d6000803e3d6000fd5b5050604080516312b5ad0160e11b815230600482015290516001600160a01b038516935063256b5a029250602480830192600092919082900301818387803b1580156150e557600080fd5b505af11580156150f9573d6000803e3d6000fd5b5050604080516340c10f1960e01b81523060048201526024810187905290516001600160a01b03851693506340c10f199250604480830192600092919082900301818387803b15801561514b57600080fd5b505af115801561515f573d6000803e3d6000fd5b50505050806001600160a01b031663a9059cbb86856040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156151ba57600080fd5b505af11580156151ce573d6000803e3d6000fd5b505050506040513d60208110156151e457600080fd5b5050600654604080517f0928a4f80000000000000000000000000000000000000000000000000000000081526001600160a01b0387811660048301529283166024820152905191871691630928a4f8916044808201926020929091908290030181600087803b15801561525657600080fd5b505af115801561526a573d6000803e3d6000fd5b505050506040513d602081101561528057600080fd5b5050604080516352f4877760e11b815230600482015260006024820181905291516001600160a01b0388169263a5e90eee926044808201939182900301818387803b1580156152ce57600080fd5b505af11580156152e2573d6000803e3d6000fd5b50506040805163ceb68c2360e01b815230600482015290516001600160a01b038516935063ceb68c239250602480830192600092919082900301818387803b1580156123c657600080fd5b60005481565b60045461010090046001600160a01b031681565b600860008281526020019081526020016000205460001460405180606001604052806022815260200161596e60229139906153c35760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561127657818101518382015260200161125e565b506000546153d29042906158b9565b60008281526008602090815260409182902092909255805183815290517f5fb9c0ecf7b4a28c4c480212e868f9da7f373a2ed4d23498b0be6aadf35242fb929181900390910190a150565b6008600082815260200190815260200160002054600014156040518060400160405280601e81526020017f54696d656c6f636b3a20616374696f6e206e6f74207369676e616c6c65640000815250906154b75760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561127657818101518382015260200161125e565b50426008600083815260200190815260200160002054106040518060600160405280602481526020016159b360249139906155335760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561127657818101518382015260200161125e565b5050565b6008600082815260200190815260200160002054600014156040518060400160405280601981526020017f54696d656c6f636b3a20696e76616c6964205f616374696f6e00000000000000815250906155d15760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561127657818101518382015260200161125e565b50600081815260086020908152604080832092909255815183815291517f194ed6dd5e37e2acc44a19455c3f208c4831ee695fe362d9c4ef2d316bc53aec9281900390910190a150565b600061565d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250615913565b9392505050565b604080517faa271e1a000000000000000000000000000000000000000000000000000000008152306004820152905184916001600160a01b0383169163aa271e1a916024808201926020929091908290030181600087803b1580156156c857600080fd5b505af11580156156dc573d6000803e3d6000fd5b505050506040513d60208110156156f257600080fd5b505161577857604080517fcf456ae70000000000000000000000000000000000000000000000000000000081523060048201526001602482015290516001600160a01b0383169163cf456ae791604480830192600092919082900301818387803b15801561575f57600080fd5b505af1158015615773573d6000803e3d6000fd5b505050505b806001600160a01b03166340c10f1984846040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b1580156157cf57600080fd5b505af11580156157e3573d6000803e3d6000fd5b50505050600154846001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561582357600080fd5b505afa158015615837573d6000803e3d6000fd5b505050506040513d602081101561584d57600080fd5b505160408051606081019091526021808252929091111591615a1b602083013990611b845760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561127657818101518382015260200161125e565b60008282018381101561565d576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600081848411156159655760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561127657818101518382015260200161125e565b50505090039056fe54696d656c6f636b3a20616374696f6e20616c7265616479207369676e616c6c656454696d656c6f636b3a20746f6b656e206e6f74207965742077686974656c697374656454696d656c6f636b3a20616374696f6e2074696d65206e6f74207965742070617373656454696d656c6f636b3a206275666665722063616e6e6f742062652064656372656173656454696d656c6f636b3a20666f7262696464656e0000000000000000000000000054696d656c6f636b3a206d6178546f6b656e537570706c79206578636565646564a2646970667358221220068d4b1ac2030d2aceaceccd41bd735481ba0fb80d0e4b78007d021f74cec05364736f6c634300060c0033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12505,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "buffer",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 12507,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "maxTokenSupply",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 12509,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "marginFeeBasisPoints",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 12511,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "maxMarginFeeBasisPoints",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 12513,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "shouldToggleIsLeverageEnabled",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 12515,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "admin",
        "offset": 1,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 12517,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "tokenManager",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 12519,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "mintReceiver",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 12521,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "mlpManager",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 12525,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "pendingActions",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 12529,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "isHandler",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 12533,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "isKeeper",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}